{"ast":null,"code":"var _jsxFileName = \"/Users/elias/Desktop/MetarWebsite/frontend/src/components/Airport/Metar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport lodash from 'lodash';\nimport { useParams, Link, Navigate } from 'react-router-dom';\nimport './Metar.css';\nimport \"../../spinner.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Metar(props) {\n  _s();\n\n  let params = useParams();\n  let padded_wind_direction;\n  let [isLoading, setLoadingStatus] = useState(true);\n  let [icao_code, set_icao_code] = useState(params.airport);\n  let [airportName, setAirportName] = useState(null);\n  let [airportLocation, setAirportLocation] = useState(null);\n  let [airport_raw_text, set_airport_raw_text] = useState(null);\n  let [airport_temperature_in_celsius, set_airport_temperature_in_celsius] = useState(null);\n  let [airport_temperature_in_fahrenheit, set_airport_temperature_in_fahrenheit] = useState(null);\n  let [flight_category, set_flight_category] = useState(null);\n  let [wind_direction, set_wind_direction] = useState(null);\n  let [wind_speed, set_wind_speed] = useState(null);\n  let [clouds, setClouds] = useState(null);\n  let [altimeter, setAltimeter] = useState(null);\n  let isSignedIn = props.isSignedIn;\n\n  const fetchData = async () => {\n    const res = await axios.get(`http://localhost:4000/metar?icao=${icao_code}`);\n    const data = await res.data;\n    set_icao_code(data.icao);\n    setAirportName(data.station.name);\n    setAirportLocation(data.station.location);\n    set_airport_raw_text(data.raw_text);\n    set_flight_category(data.flight_category);\n\n    if (data.temperature.celsius === undefined && data.temperature.fahrenheit === undefined) {\n      set_airport_temperature_in_celsius(data.temperature.minimum.celsius);\n      set_airport_temperature_in_fahrenheit(data.temperature.minimum.fahrenheit);\n    } else {\n      set_airport_temperature_in_celsius(data.temperature.celsius);\n      set_airport_temperature_in_fahrenheit(data.temperature.fahrenheit);\n    }\n\n    if (data.wind.degrees >= 100) {\n      set_wind_direction(data.wind.degrees);\n    } else {\n      padded_wind_direction = data.wind.degrees.toString();\n      set_wind_direction(padded_wind_direction.padStart(3, '0'));\n    }\n\n    set_wind_speed(data.wind.speed_kts);\n    setClouds(data.clouds[0].text);\n    setTimeout(function () {\n      setLoadingStatus(false);\n    }, 1250);\n  };\n\n  useEffect(() => {\n    fetchData(); // empty dependency array means this effect will only run once (like componentDidMount in classes)\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lds-ring\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !isSignedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: lodash.isEmpty(icao_code) ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"That airport does not exist!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/${icao_code}`,\n                children: [icao_code, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 41\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 88\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/metar/${icao_code}`,\n                onClick: () => window.location.reload(),\n                children: \"Metar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: icao_code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: airportName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: airportLocation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metarTitle\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"METAR - Current\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metarTable\",\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"table\",\n                  children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: /*#__PURE__*/_jsxDEV(\"th\", {\n                        colSpan: 2,\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: airport_raw_text\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 95,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 94,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Flight Category\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 99,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"badge text-white\",\n                          children: flight_category\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 101,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 100,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Wind\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 107,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [wind_direction, \"\\xB0 at \", wind_speed, \" KTS\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 108,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Temperature\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 113,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [airport_temperature_in_celsius, \"\\xB0 C /\", airport_temperature_in_fahrenheit, \"\\xB0 F\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 114,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Clouds\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 120,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: clouds\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 121,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Alitmeter\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 126,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 127,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s(Metar, \"jGmpW3/gtqGe6zeDCyq3YbXKthA=\", false, function () {\n  return [useParams];\n});\n\n_c = Metar;\nexport default Metar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Metar\");","map":{"version":3,"sources":["/Users/elias/Desktop/MetarWebsite/frontend/src/components/Airport/Metar.tsx"],"names":["React","useEffect","useState","axios","lodash","useParams","Link","Navigate","Metar","props","params","padded_wind_direction","isLoading","setLoadingStatus","icao_code","set_icao_code","airport","airportName","setAirportName","airportLocation","setAirportLocation","airport_raw_text","set_airport_raw_text","airport_temperature_in_celsius","set_airport_temperature_in_celsius","airport_temperature_in_fahrenheit","set_airport_temperature_in_fahrenheit","flight_category","set_flight_category","wind_direction","set_wind_direction","wind_speed","set_wind_speed","clouds","setClouds","altimeter","setAltimeter","isSignedIn","fetchData","res","get","data","icao","station","name","location","raw_text","temperature","celsius","undefined","fahrenheit","minimum","wind","degrees","toString","padStart","speed_kts","text","setTimeout","isEmpty","window","reload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,QAA1B,QAA0C,kBAA1C;AACA,OAAO,aAAP;AACA,OAAO,mBAAP;;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAClB,MAAIC,MAAM,GAAGL,SAAS,EAAtB;AACA,MAAIM,qBAAJ;AACA,MAAI,CAACC,SAAD,EAAYC,gBAAZ,IAAgCX,QAAQ,CAAC,IAAD,CAA5C;AACA,MAAI,CAACY,SAAD,EAAYC,aAAZ,IAA6Bb,QAAQ,CAACQ,MAAM,CAACM,OAAR,CAAzC;AACA,MAAI,CAACC,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,IAAD,CAA5C;AACA,MAAI,CAACiB,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CAAC,IAAD,CAApD;AACA,MAAI,CAACmB,gBAAD,EAAmBC,oBAAnB,IAA2CpB,QAAQ,CAAC,IAAD,CAAvD;AACA,MAAI,CAACqB,8BAAD,EAAiCC,kCAAjC,IAAuEtB,QAAQ,CAAC,IAAD,CAAnF;AACA,MAAI,CAACuB,iCAAD,EAAoCC,qCAApC,IAA6ExB,QAAQ,CAAC,IAAD,CAAzF;AACA,MAAI,CAACyB,eAAD,EAAkBC,mBAAlB,IAAyC1B,QAAQ,CAAC,IAAD,CAArD;AACA,MAAI,CAAC2B,cAAD,EAAiBC,kBAAjB,IAAuC5B,QAAQ,CAAC,IAAD,CAAnD;AACA,MAAI,CAAC6B,UAAD,EAAaC,cAAb,IAA+B9B,QAAQ,CAAC,IAAD,CAA3C;AACA,MAAI,CAAC+B,MAAD,EAASC,SAAT,IAAsBhC,QAAQ,CAAC,IAAD,CAAlC;AACA,MAAI,CAACiC,SAAD,EAAYC,YAAZ,IAA4BlC,QAAQ,CAAC,IAAD,CAAxC;AAEA,MAAImC,UAAU,GAAG5B,KAAK,CAAC4B,UAAvB;;AAGA,QAAMC,SAAS,GAAG,YAAY;AAC1B,UAAMC,GAAG,GAAG,MAAMpC,KAAK,CAACqC,GAAN,CAAW,oCAAmC1B,SAAU,EAAxD,CAAlB;AACA,UAAM2B,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAvB;AACA1B,IAAAA,aAAa,CAAC0B,IAAI,CAACC,IAAN,CAAb;AACAxB,IAAAA,cAAc,CAACuB,IAAI,CAACE,OAAL,CAAaC,IAAd,CAAd;AACAxB,IAAAA,kBAAkB,CAACqB,IAAI,CAACE,OAAL,CAAaE,QAAd,CAAlB;AACAvB,IAAAA,oBAAoB,CAACmB,IAAI,CAACK,QAAN,CAApB;AACAlB,IAAAA,mBAAmB,CAACa,IAAI,CAACd,eAAN,CAAnB;;AACA,QAAGc,IAAI,CAACM,WAAL,CAAiBC,OAAjB,KAA6BC,SAA7B,IAA0CR,IAAI,CAACM,WAAL,CAAiBG,UAAjB,KAAgCD,SAA7E,EAAwF;AACpFzB,MAAAA,kCAAkC,CAACiB,IAAI,CAACM,WAAL,CAAiBI,OAAjB,CAAyBH,OAA1B,CAAlC;AACAtB,MAAAA,qCAAqC,CAACe,IAAI,CAACM,WAAL,CAAiBI,OAAjB,CAAyBD,UAA1B,CAArC;AACF,KAHF,MAGQ;AACA1B,MAAAA,kCAAkC,CAACiB,IAAI,CAACM,WAAL,CAAiBC,OAAlB,CAAlC;AACAtB,MAAAA,qCAAqC,CAACe,IAAI,CAACM,WAAL,CAAiBG,UAAlB,CAArC;AACH;;AACL,QAAGT,IAAI,CAACW,IAAL,CAAUC,OAAV,IAAqB,GAAxB,EAA6B;AAAEvB,MAAAA,kBAAkB,CAACW,IAAI,CAACW,IAAL,CAAUC,OAAX,CAAlB;AAAwC,KAAvE,MAA6E;AACzE1C,MAAAA,qBAAqB,GAAG8B,IAAI,CAACW,IAAL,CAAUC,OAAV,CAAkBC,QAAlB,EAAxB;AACAxB,MAAAA,kBAAkB,CAACnB,qBAAqB,CAAC4C,QAAtB,CAA+B,CAA/B,EAAkC,GAAlC,CAAD,CAAlB;AACH;;AACDvB,IAAAA,cAAc,CAACS,IAAI,CAACW,IAAL,CAAUI,SAAX,CAAd;AACAtB,IAAAA,SAAS,CAACO,IAAI,CAACR,MAAL,CAAY,CAAZ,EAAewB,IAAhB,CAAT;AACAC,IAAAA,UAAU,CACN,YAAW;AACP7C,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,KAHK,EAGH,IAHG,CAAV;AAIH,GAzBD;;AA4BAZ,EAAAA,SAAS,CAAC,MAAM;AACZqC,IAAAA,SAAS,GADG,CAEhB;AACC,GAHQ,EAGN,EAHM,CAAT;AAIA,sBACI;AAAA,2BACE;AAAA,gBACK1B,SAAS,gBACJ;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA,gBADA,eACW;AAAA;AAAA;AAAA;AAAA,gBADX,eACsB;AAAA;AAAA;AAAA;AAAA,gBADtB,eACiC;AAAA;AAAA;AAAA;AAAA,gBADjC;AAAA;AAAA;AAAA;AAAA;AAAA,cADI,gBAKR;AAAA,kBACK,CAACyB,UAAD,gBACG,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADH,gBAGG;AAAA,oBACKjC,MAAM,CAACuD,OAAP,CAAe7C,SAAf,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,gBAGG;AAAA,oCACI;AAAA,sCACI,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAG,IAAGA,SAAU,EAAxB;AAAA,2BAA4BA,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,oBACmD;AAAA;AAAA;AAAA;AAAA,sBADnD,eAEI,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAG,UAASA,SAAU,EAA9B;AAAiC,gBAAA,OAAO,EAAG,MAAK8C,MAAM,CAACf,QAAP,CAAgBgB,MAAhB,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI;AAAA,wBAAK/C;AAAL;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI;AAAA,sCACI;AAAA,0BAAKG;AAAL;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,0BAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAWI;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,uCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,uCACI;AAAO,kBAAA,SAAS,EAAC,OAAjB;AAAA,yCACI;AAAA,4CACI;AAAA,6CACI;AAAI,wBAAA,OAAO,EAAE,CAAb;AAAA,+CACI;AAAA,oCAAIE;AAAJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,4BADJ,eAMI;AAAA,8CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAA,+CACI;AAAM,0BAAA,SAAS,EAAC,kBAAhB;AAAA,oCACKM;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,8BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BANJ,eAcI;AAAA,8CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAA,mCACKE,cADL,cAC0BE,UAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BAdJ,eAoBI;AAAA,8CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAA,mCACKR,8BADL,cAEKE,iCAFL;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BApBJ,eA2BI;AAAA,8CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAA,kCACKQ;AADL;AAAA;AAAA;AAAA;AAAA,8BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BA3BJ,eAiCI;AAAA,8CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAA;AAAA;AAAA;AAAA,8BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA;AADF,mBADJ;AAmFH;;GAtIQzB,K;UACQH,S;;;KADRG,K;AA0IT,eAAeA,KAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport lodash from 'lodash';\nimport { useParams, Link, Navigate } from 'react-router-dom';\nimport './Metar.css';\nimport \"../../spinner.css\";\n\nfunction Metar(props) {\n    let params = useParams();\n    let padded_wind_direction\n    let [isLoading, setLoadingStatus] = useState(true);\n    let [icao_code, set_icao_code] = useState(params.airport); \n    let [airportName, setAirportName] = useState(null);\n    let [airportLocation, setAirportLocation] = useState(null);\n    let [airport_raw_text, set_airport_raw_text] = useState(null);\n    let [airport_temperature_in_celsius, set_airport_temperature_in_celsius] = useState(null);\n    let [airport_temperature_in_fahrenheit, set_airport_temperature_in_fahrenheit] = useState(null);\n    let [flight_category, set_flight_category] = useState(null);\n    let [wind_direction, set_wind_direction] = useState(null);\n    let [wind_speed, set_wind_speed] = useState(null);\n    let [clouds, setClouds] = useState(null);\n    let [altimeter, setAltimeter] = useState(null);\n\n    let isSignedIn = props.isSignedIn; \n\n\n    const fetchData = async () => {\n        const res = await axios.get(`http://localhost:4000/metar?icao=${icao_code}`);\n        const data = await res.data;\n        set_icao_code(data.icao);\n        setAirportName(data.station.name);\n        setAirportLocation(data.station.location);\n        set_airport_raw_text(data.raw_text);\n        set_flight_category(data.flight_category);\n        if(data.temperature.celsius === undefined && data.temperature.fahrenheit === undefined) { \n            set_airport_temperature_in_celsius(data.temperature.minimum.celsius);\n            set_airport_temperature_in_fahrenheit(data.temperature.minimum.fahrenheit);\n         } else { \n                set_airport_temperature_in_celsius(data.temperature.celsius); \n                set_airport_temperature_in_fahrenheit(data.temperature.fahrenheit); \n            }\n        if(data.wind.degrees >= 100) { set_wind_direction(data.wind.degrees); } else {\n            padded_wind_direction = data.wind.degrees.toString();\n            set_wind_direction(padded_wind_direction.padStart(3, '0'));\n        }\n        set_wind_speed(data.wind.speed_kts);\n        setClouds(data.clouds[0].text);\n        setTimeout(\n            function() {\n                setLoadingStatus(false);\n            }, 1250)\n    };\n\n\n    useEffect(() => {\n        fetchData()\n    // empty dependency array means this effect will only run once (like componentDidMount in classes)\n    }, []);\n    return (\n        <>\n          <main>\n              {isLoading ? (\n                    <div className=\"lds-ring\">\n                    <div></div><div></div><div></div><div></div>\n                    </div>\n              ) : (\n                <div>\n                    {!isSignedIn ? (\n                        <Navigate to=\"/login\" />\n                    ) : (\n                        <div>\n                            {lodash.isEmpty(icao_code) ? (\n                                <h1>That airport does not exist!</h1>\n                            ) : (\n                                <div>\n                                    <div>\n                                        <Link to={`/${icao_code}`}>{icao_code} </Link> <br></br>\n                                        <Link to={`/metar/${icao_code}`} onClick={(()=> window.location.reload())}>Metar\n                                        </Link>\n                                    </div>\n                                    <h1>{icao_code}</h1>\n                                    <div>\n                                        <h2>{airportName}</h2>\n                                        <h3>{airportLocation}</h3>\n                                    </div>\n                                    <div>\n                                        <div className=\"metarTitle\">\n                                            <h3>METAR - Current</h3>\n                                        </div>\n                                        <div className=\"metarTable\">\n                                            <table className=\"table\">\n                                                <tbody>\n                                                    <tr>\n                                                        <th colSpan={2}>\n                                                            <p>{airport_raw_text}</p>\n                                                        </th>\n                                                    </tr>\n                                                    <tr>\n                                                        <th>Flight Category</th>\n                                                        <td>\n                                                            <span className=\"badge text-white\">\n                                                                {flight_category}\n                                                            </span>\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <th>Wind</th>\n                                                        <td>\n                                                            {wind_direction}° at {wind_speed} KTS\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <th>Temperature</th>\n                                                        <td>\n                                                            {airport_temperature_in_celsius}° C /\n                                                            {airport_temperature_in_fahrenheit}° F\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <th>Clouds</th>\n                                                        <td>\n                                                            {clouds}\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <th>Alitmeter</th>\n                                                        <td>{}</td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    )}\n            </div>\n          )}\n          </main>\n        </>\n    );\n}\n\n\n\nexport default Metar;\n"]},"metadata":{},"sourceType":"module"}