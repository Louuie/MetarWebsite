{"ast":null,"code":"// do not edit .js files directly - edit src/index.jst\nvar fastDeepEqual = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n    var length, i, keys;\n\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n\n      for (i = length; i-- !== 0;) if (!equal(a[i], b[i])) return false;\n\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  } // true if both NaN, false otherwise\n\n\n  return a !== a && b !== b;\n};\n/**\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at.\r\n *\r\n *      Http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nconst DEFAULT_ID = \"__googleMapsScriptId\";\n/**\r\n * The status of the [[Loader]].\r\n */\n\nvar LoaderStatus;\n\n(function (LoaderStatus) {\n  LoaderStatus[LoaderStatus[\"INITIALIZED\"] = 0] = \"INITIALIZED\";\n  LoaderStatus[LoaderStatus[\"LOADING\"] = 1] = \"LOADING\";\n  LoaderStatus[LoaderStatus[\"SUCCESS\"] = 2] = \"SUCCESS\";\n  LoaderStatus[LoaderStatus[\"FAILURE\"] = 3] = \"FAILURE\";\n})(LoaderStatus || (LoaderStatus = {}));\n/**\r\n * [[Loader]] makes it easier to add Google Maps JavaScript API to your application\r\n * dynamically using\r\n * [Promises](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\r\n * It works by dynamically creating and appending a script node to the the\r\n * document head and wrapping the callback function so as to return a promise.\r\n *\r\n * ```\r\n * const loader = new Loader({\r\n *   apiKey: \"\",\r\n *   version: \"weekly\",\r\n *   libraries: [\"places\"]\r\n * });\r\n *\r\n * loader.load().then((google) => {\r\n *   const map = new google.maps.Map(...)\r\n * })\r\n * ```\r\n */\n\n\nclass Loader {\n  /**\r\n   * Creates an instance of Loader using [[LoaderOptions]]. No defaults are set\r\n   * using this library, instead the defaults are set by the Google Maps\r\n   * JavaScript API server.\r\n   *\r\n   * ```\r\n   * const loader = Loader({apiKey, version: 'weekly', libraries: ['places']});\r\n   * ```\r\n   */\n  constructor(_ref) {\n    let {\n      apiKey,\n      channel,\n      client,\n      id = DEFAULT_ID,\n      libraries = [],\n      language,\n      region,\n      version,\n      mapIds,\n      nonce,\n      retries = 3,\n      url = \"https://maps.googleapis.com/maps/api/js\"\n    } = _ref;\n    this.CALLBACK = \"__googleMapsCallback\";\n    this.callbacks = [];\n    this.done = false;\n    this.loading = false;\n    this.errors = [];\n    this.version = version;\n    this.apiKey = apiKey;\n    this.channel = channel;\n    this.client = client;\n    this.id = id || DEFAULT_ID; // Do not allow empty string\n\n    this.libraries = libraries;\n    this.language = language;\n    this.region = region;\n    this.mapIds = mapIds;\n    this.nonce = nonce;\n    this.retries = retries;\n    this.url = url;\n\n    if (Loader.instance) {\n      if (!fastDeepEqual(this.options, Loader.instance.options)) {\n        throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(Loader.instance.options)}`);\n      }\n\n      return Loader.instance;\n    }\n\n    Loader.instance = this;\n  }\n\n  get options() {\n    return {\n      version: this.version,\n      apiKey: this.apiKey,\n      channel: this.channel,\n      client: this.client,\n      id: this.id,\n      libraries: this.libraries,\n      language: this.language,\n      region: this.region,\n      mapIds: this.mapIds,\n      nonce: this.nonce,\n      url: this.url\n    };\n  }\n\n  get status() {\n    if (this.errors.length) {\n      return LoaderStatus.FAILURE;\n    }\n\n    if (this.done) {\n      return LoaderStatus.SUCCESS;\n    }\n\n    if (this.loading) {\n      return LoaderStatus.LOADING;\n    }\n\n    return LoaderStatus.INITIALIZED;\n  }\n\n  get failed() {\n    return this.done && !this.loading && this.errors.length >= this.retries + 1;\n  }\n  /**\r\n   * CreateUrl returns the Google Maps JavaScript API script url given the [[LoaderOptions]].\r\n   *\r\n   * @ignore\r\n   */\n\n\n  createUrl() {\n    let url = this.url;\n    url += `?callback=${this.CALLBACK}`;\n\n    if (this.apiKey) {\n      url += `&key=${this.apiKey}`;\n    }\n\n    if (this.channel) {\n      url += `&channel=${this.channel}`;\n    }\n\n    if (this.client) {\n      url += `&client=${this.client}`;\n    }\n\n    if (this.libraries.length > 0) {\n      url += `&libraries=${this.libraries.join(\",\")}`;\n    }\n\n    if (this.language) {\n      url += `&language=${this.language}`;\n    }\n\n    if (this.region) {\n      url += `&region=${this.region}`;\n    }\n\n    if (this.version) {\n      url += `&v=${this.version}`;\n    }\n\n    if (this.mapIds) {\n      url += `&map_ids=${this.mapIds.join(\",\")}`;\n    }\n\n    return url;\n  }\n\n  deleteScript() {\n    const script = document.getElementById(this.id);\n\n    if (script) {\n      script.remove();\n    }\n  }\n  /**\r\n   * Load the Google Maps JavaScript API script and return a Promise.\r\n   */\n\n\n  load() {\n    return this.loadPromise();\n  }\n  /**\r\n   * Load the Google Maps JavaScript API script and return a Promise.\r\n   *\r\n   * @ignore\r\n   */\n\n\n  loadPromise() {\n    return new Promise((resolve, reject) => {\n      this.loadCallback(err => {\n        if (!err) {\n          resolve(window.google);\n        } else {\n          reject(err.error);\n        }\n      });\n    });\n  }\n  /**\r\n   * Load the Google Maps JavaScript API script with a callback.\r\n   */\n\n\n  loadCallback(fn) {\n    this.callbacks.push(fn);\n    this.execute();\n  }\n  /**\r\n   * Set the script on document.\r\n   */\n\n\n  setScript() {\n    if (document.getElementById(this.id)) {\n      // TODO wrap onerror callback for cases where the script was loaded elsewhere\n      this.callback();\n      return;\n    }\n\n    const url = this.createUrl();\n    const script = document.createElement(\"script\");\n    script.id = this.id;\n    script.type = \"text/javascript\";\n    script.src = url;\n    script.onerror = this.loadErrorCallback.bind(this);\n    script.defer = true;\n    script.async = true;\n\n    if (this.nonce) {\n      script.nonce = this.nonce;\n    }\n\n    document.head.appendChild(script);\n  }\n  /**\r\n   * Reset the loader state.\r\n   */\n\n\n  reset() {\n    this.deleteScript();\n    this.done = false;\n    this.loading = false;\n    this.errors = [];\n    this.onerrorEvent = null;\n  }\n\n  resetIfRetryingFailed() {\n    if (this.failed) {\n      this.reset();\n    }\n  }\n\n  loadErrorCallback(e) {\n    this.errors.push(e);\n\n    if (this.errors.length <= this.retries) {\n      const delay = this.errors.length * Math.pow(2, this.errors.length);\n      console.log(`Failed to load Google Maps script, retrying in ${delay} ms.`);\n      setTimeout(() => {\n        this.deleteScript();\n        this.setScript();\n      }, delay);\n    } else {\n      this.onerrorEvent = e;\n      this.callback();\n    }\n  }\n\n  setCallback() {\n    window.__googleMapsCallback = this.callback.bind(this);\n  }\n\n  callback() {\n    this.done = true;\n    this.loading = false;\n    this.callbacks.forEach(cb => {\n      cb(this.onerrorEvent);\n    });\n    this.callbacks = [];\n  }\n\n  execute() {\n    this.resetIfRetryingFailed();\n\n    if (this.done) {\n      this.callback();\n    } else {\n      // short circuit and warn if google.maps is already loaded\n      if (window.google && window.google.maps && window.google.maps.version) {\n        console.warn(\"Google Maps already loaded outside @googlemaps/js-api-loader.\" + \"This may result in undesirable behavior as options and script parameters may not match.\");\n        this.callback();\n        return;\n      }\n\n      if (this.loading) ;else {\n        this.loading = true;\n        this.setCallback();\n        this.setScript();\n      }\n    }\n  }\n\n}\n\nexport { DEFAULT_ID, Loader, LoaderStatus };","map":{"version":3,"mappings":"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","names":["fastDeepEqual","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","DEFAULT_ID","LoaderStatus","Loader","apiKey","channel","client","id","libraries","language","region","version","mapIds","nonce","retries","url","CALLBACK","callbacks","done","loading","errors","instance","options","Error","JSON","stringify","status","FAILURE","SUCCESS","LOADING","INITIALIZED","failed","createUrl","join","deleteScript","script","document","getElementById","remove","load","loadPromise","Promise","resolve","reject","loadCallback","err","window","google","error","fn","push","execute","setScript","callback","createElement","type","src","onerror","loadErrorCallback","bind","defer","async","head","appendChild","reset","onerrorEvent","resetIfRetryingFailed","e","delay","Math","pow","console","log","setTimeout","setCallback","__googleMapsCallback","forEach","cb","maps","warn"],"sources":["C:/Users/Elias/Documents/Programming/MetarWebsite/frontend/node_modules/@googlemaps/js-api-loader/dist/index.esm.js"],"sourcesContent":["// do not edit .js files directly - edit src/index.jst\r\n\r\n\r\n\r\nvar fastDeepEqual = function equal(a, b) {\r\n  if (a === b) return true;\r\n\r\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\r\n    if (a.constructor !== b.constructor) return false;\r\n\r\n    var length, i, keys;\r\n    if (Array.isArray(a)) {\r\n      length = a.length;\r\n      if (length != b.length) return false;\r\n      for (i = length; i-- !== 0;)\r\n        if (!equal(a[i], b[i])) return false;\r\n      return true;\r\n    }\r\n\r\n\r\n\r\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\r\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\r\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\r\n\r\n    keys = Object.keys(a);\r\n    length = keys.length;\r\n    if (length !== Object.keys(b).length) return false;\r\n\r\n    for (i = length; i-- !== 0;)\r\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\r\n\r\n    for (i = length; i-- !== 0;) {\r\n      var key = keys[i];\r\n\r\n      if (!equal(a[key], b[key])) return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  // true if both NaN, false otherwise\r\n  return a!==a && b!==b;\r\n};\r\n\r\n/**\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at.\r\n *\r\n *      Http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_ID = \"__googleMapsScriptId\";\r\n/**\r\n * The status of the [[Loader]].\r\n */\r\nvar LoaderStatus;\r\n(function (LoaderStatus) {\r\n    LoaderStatus[LoaderStatus[\"INITIALIZED\"] = 0] = \"INITIALIZED\";\r\n    LoaderStatus[LoaderStatus[\"LOADING\"] = 1] = \"LOADING\";\r\n    LoaderStatus[LoaderStatus[\"SUCCESS\"] = 2] = \"SUCCESS\";\r\n    LoaderStatus[LoaderStatus[\"FAILURE\"] = 3] = \"FAILURE\";\r\n})(LoaderStatus || (LoaderStatus = {}));\r\n/**\r\n * [[Loader]] makes it easier to add Google Maps JavaScript API to your application\r\n * dynamically using\r\n * [Promises](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\r\n * It works by dynamically creating and appending a script node to the the\r\n * document head and wrapping the callback function so as to return a promise.\r\n *\r\n * ```\r\n * const loader = new Loader({\r\n *   apiKey: \"\",\r\n *   version: \"weekly\",\r\n *   libraries: [\"places\"]\r\n * });\r\n *\r\n * loader.load().then((google) => {\r\n *   const map = new google.maps.Map(...)\r\n * })\r\n * ```\r\n */\r\nclass Loader {\r\n    /**\r\n     * Creates an instance of Loader using [[LoaderOptions]]. No defaults are set\r\n     * using this library, instead the defaults are set by the Google Maps\r\n     * JavaScript API server.\r\n     *\r\n     * ```\r\n     * const loader = Loader({apiKey, version: 'weekly', libraries: ['places']});\r\n     * ```\r\n     */\r\n    constructor({ apiKey, channel, client, id = DEFAULT_ID, libraries = [], language, region, version, mapIds, nonce, retries = 3, url = \"https://maps.googleapis.com/maps/api/js\", }) {\r\n        this.CALLBACK = \"__googleMapsCallback\";\r\n        this.callbacks = [];\r\n        this.done = false;\r\n        this.loading = false;\r\n        this.errors = [];\r\n        this.version = version;\r\n        this.apiKey = apiKey;\r\n        this.channel = channel;\r\n        this.client = client;\r\n        this.id = id || DEFAULT_ID; // Do not allow empty string\r\n        this.libraries = libraries;\r\n        this.language = language;\r\n        this.region = region;\r\n        this.mapIds = mapIds;\r\n        this.nonce = nonce;\r\n        this.retries = retries;\r\n        this.url = url;\r\n        if (Loader.instance) {\r\n            if (!fastDeepEqual(this.options, Loader.instance.options)) {\r\n                throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(Loader.instance.options)}`);\r\n            }\r\n            return Loader.instance;\r\n        }\r\n        Loader.instance = this;\r\n    }\r\n    get options() {\r\n        return {\r\n            version: this.version,\r\n            apiKey: this.apiKey,\r\n            channel: this.channel,\r\n            client: this.client,\r\n            id: this.id,\r\n            libraries: this.libraries,\r\n            language: this.language,\r\n            region: this.region,\r\n            mapIds: this.mapIds,\r\n            nonce: this.nonce,\r\n            url: this.url,\r\n        };\r\n    }\r\n    get status() {\r\n        if (this.errors.length) {\r\n            return LoaderStatus.FAILURE;\r\n        }\r\n        if (this.done) {\r\n            return LoaderStatus.SUCCESS;\r\n        }\r\n        if (this.loading) {\r\n            return LoaderStatus.LOADING;\r\n        }\r\n        return LoaderStatus.INITIALIZED;\r\n    }\r\n    get failed() {\r\n        return this.done && !this.loading && this.errors.length >= this.retries + 1;\r\n    }\r\n    /**\r\n     * CreateUrl returns the Google Maps JavaScript API script url given the [[LoaderOptions]].\r\n     *\r\n     * @ignore\r\n     */\r\n    createUrl() {\r\n        let url = this.url;\r\n        url += `?callback=${this.CALLBACK}`;\r\n        if (this.apiKey) {\r\n            url += `&key=${this.apiKey}`;\r\n        }\r\n        if (this.channel) {\r\n            url += `&channel=${this.channel}`;\r\n        }\r\n        if (this.client) {\r\n            url += `&client=${this.client}`;\r\n        }\r\n        if (this.libraries.length > 0) {\r\n            url += `&libraries=${this.libraries.join(\",\")}`;\r\n        }\r\n        if (this.language) {\r\n            url += `&language=${this.language}`;\r\n        }\r\n        if (this.region) {\r\n            url += `&region=${this.region}`;\r\n        }\r\n        if (this.version) {\r\n            url += `&v=${this.version}`;\r\n        }\r\n        if (this.mapIds) {\r\n            url += `&map_ids=${this.mapIds.join(\",\")}`;\r\n        }\r\n        return url;\r\n    }\r\n    deleteScript() {\r\n        const script = document.getElementById(this.id);\r\n        if (script) {\r\n            script.remove();\r\n        }\r\n    }\r\n    /**\r\n     * Load the Google Maps JavaScript API script and return a Promise.\r\n     */\r\n    load() {\r\n        return this.loadPromise();\r\n    }\r\n    /**\r\n     * Load the Google Maps JavaScript API script and return a Promise.\r\n     *\r\n     * @ignore\r\n     */\r\n    loadPromise() {\r\n        return new Promise((resolve, reject) => {\r\n            this.loadCallback((err) => {\r\n                if (!err) {\r\n                    resolve(window.google);\r\n                }\r\n                else {\r\n                    reject(err.error);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Load the Google Maps JavaScript API script with a callback.\r\n     */\r\n    loadCallback(fn) {\r\n        this.callbacks.push(fn);\r\n        this.execute();\r\n    }\r\n    /**\r\n     * Set the script on document.\r\n     */\r\n    setScript() {\r\n        if (document.getElementById(this.id)) {\r\n            // TODO wrap onerror callback for cases where the script was loaded elsewhere\r\n            this.callback();\r\n            return;\r\n        }\r\n        const url = this.createUrl();\r\n        const script = document.createElement(\"script\");\r\n        script.id = this.id;\r\n        script.type = \"text/javascript\";\r\n        script.src = url;\r\n        script.onerror = this.loadErrorCallback.bind(this);\r\n        script.defer = true;\r\n        script.async = true;\r\n        if (this.nonce) {\r\n            script.nonce = this.nonce;\r\n        }\r\n        document.head.appendChild(script);\r\n    }\r\n    /**\r\n     * Reset the loader state.\r\n     */\r\n    reset() {\r\n        this.deleteScript();\r\n        this.done = false;\r\n        this.loading = false;\r\n        this.errors = [];\r\n        this.onerrorEvent = null;\r\n    }\r\n    resetIfRetryingFailed() {\r\n        if (this.failed) {\r\n            this.reset();\r\n        }\r\n    }\r\n    loadErrorCallback(e) {\r\n        this.errors.push(e);\r\n        if (this.errors.length <= this.retries) {\r\n            const delay = this.errors.length * Math.pow(2, this.errors.length);\r\n            console.log(`Failed to load Google Maps script, retrying in ${delay} ms.`);\r\n            setTimeout(() => {\r\n                this.deleteScript();\r\n                this.setScript();\r\n            }, delay);\r\n        }\r\n        else {\r\n            this.onerrorEvent = e;\r\n            this.callback();\r\n        }\r\n    }\r\n    setCallback() {\r\n        window.__googleMapsCallback = this.callback.bind(this);\r\n    }\r\n    callback() {\r\n        this.done = true;\r\n        this.loading = false;\r\n        this.callbacks.forEach((cb) => {\r\n            cb(this.onerrorEvent);\r\n        });\r\n        this.callbacks = [];\r\n    }\r\n    execute() {\r\n        this.resetIfRetryingFailed();\r\n        if (this.done) {\r\n            this.callback();\r\n        }\r\n        else {\r\n            // short circuit and warn if google.maps is already loaded\r\n            if (window.google && window.google.maps && window.google.maps.version) {\r\n                console.warn(\"Google Maps already loaded outside @googlemaps/js-api-loader.\" +\r\n                    \"This may result in undesirable behavior as options and script parameters may not match.\");\r\n                this.callback();\r\n                return;\r\n            }\r\n            if (this.loading) ;\r\n            else {\r\n                this.loading = true;\r\n                this.setCallback();\r\n                this.setScript();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport { DEFAULT_ID, Loader, LoaderStatus };\r\n\n"]},"metadata":{},"sourceType":"module"}