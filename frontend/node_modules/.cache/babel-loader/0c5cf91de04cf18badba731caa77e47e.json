{"ast":null,"code":"var _jsxFileName = \"/Users/elias/Desktop/Desktop - Elias\\u2019s MacBook Pro/MetarWebsite/frontend/src/components/Airport/Metar.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport lodash from 'lodash';\nimport { useParams, Link } from 'react-router-dom';\nimport './Metar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Metar() {\n  _s2();\n\n  let params = useParams();\n  let padded_wind_direction;\n  useEffect(() => {\n    var _s = $RefreshSig$();\n\n    // GET request using axios inside useEffect React hook\n    _s(axios.get(`http://localhost:4000/metar?icao=${icao_code}`).then(_s(response => {\n      _s();\n\n      let [icao_code, set_icao_code] = useState(params.airport);\n      let [airportName, setAirportName] = useState(null);\n      let [airportLocation, setAirportLocation] = useState(null);\n      let [airport_raw_text, set_airport_raw_text] = useState(null);\n      let [airport_temperature_in_celsius, set_airport_temperature_in_celsius] = useState(null);\n      let [airport_temperature_in_fahrenheit, set_airport_temperature_in_fahrenheit] = useState(null);\n      let [flight_category, set_flight_category] = useState(null);\n      let [wind_direction, set_wind_direction] = useState(null);\n      let [wind_speed, set_wind_speed] = useState(null);\n      set_icao_code(response.data.icao);\n      setAirportName(response.data.station.name);\n      setAirportLocation(response.data.station.location);\n      set_airport_raw_text(response.data.raw_text);\n      set_flight_category(response.data.flight_category);\n\n      if (response.data.temperature.celsius === undefined && response.data.temperature.fahrenheit === undefined) {\n        set_airport_temperature_in_celsius(response.data.temperature.minimum.celsius);\n        set_airport_temperature_in_fahrenheit(response.data.temperature.minimum.fahrenheit);\n      } else {\n        set_airport_temperature_in_celsius(response.data.temperature.celsius);\n        set_airport_temperature_in_fahrenheit(response.data.temperature.fahrenheit);\n      }\n\n      if (response.data.wind.degrees >= 100) {\n        set_wind_direction(response.data.wind.degrees);\n      } else {\n        padded_wind_direction = response.data.wind.degrees.toString();\n        set_wind_direction(padded_wind_direction.padStart(3, '0'));\n      }\n\n      set_wind_speed(response.data.wind.speed_kts);\n    }, \"qD1HSbz4fy5w1eTU0t7VmGtN4ro=\")), \"qD1HSbz4fy5w1eTU0t7VmGtN4ro=\").catch(err => {\n      console.log(err);\n    }); // empty dependency array means this effect will only run once (like componentDidMount in classes)\n\n  }, [wind_direction]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: lodash.isEmpty(icao_code) ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"That airport does not exist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/${icao_code}`,\n            children: icao_code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 70\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/metar/${icao_code}`,\n            onClick: () => window.location.reload(),\n            children: \"Metar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: icao_code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: airportName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: airportLocation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metarTitle\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"METAR - Current\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metarTable\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"th\", {\n                    colSpan: 2,\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: airport_raw_text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Flight Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"badge text-white\",\n                      children: flight_category\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Wind\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [wind_direction, \"\\xB0 at \", wind_speed, \" KTS\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Temperature\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [airport_temperature_in_celsius, \"\\xB0 C / \", airport_temperature_in_fahrenheit, \"\\xB0 F\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s2(Metar, \"oVl/CosACDqoQXSsHMBk26cu/Mw=\", false, function () {\n  return [useParams];\n});\n\n_c = Metar;\nexport default Metar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Metar\");","map":{"version":3,"sources":["/Users/elias/Desktop/Desktop - Elias’s MacBook Pro/MetarWebsite/frontend/src/components/Airport/Metar.jsx"],"names":["React","useEffect","useState","axios","lodash","useParams","Link","Metar","params","padded_wind_direction","get","icao_code","then","response","set_icao_code","airport","airportName","setAirportName","airportLocation","setAirportLocation","airport_raw_text","set_airport_raw_text","airport_temperature_in_celsius","set_airport_temperature_in_celsius","airport_temperature_in_fahrenheit","set_airport_temperature_in_fahrenheit","flight_category","set_flight_category","wind_direction","set_wind_direction","wind_speed","set_wind_speed","data","icao","station","name","location","raw_text","temperature","celsius","undefined","fahrenheit","minimum","wind","degrees","toString","padStart","speed_kts","catch","err","console","log","isEmpty","window","reload"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport lodash from 'lodash';\nimport { useParams, Link } from 'react-router-dom';\nimport './Metar.css';\n\nfunction Metar() {\n    let params = useParams();\n    let padded_wind_direction\n\n\n    useEffect(() => {\n        // GET request using axios inside useEffect React hook\n        axios.get(`http://localhost:4000/metar?icao=${icao_code}`)\n            .then(response => {\n                let [icao_code, set_icao_code] = useState(params.airport);\n                let [airportName, setAirportName] = useState(null);\n                let [airportLocation, setAirportLocation] = useState(null);\n                let [airport_raw_text, set_airport_raw_text] = useState(null);\n                let [airport_temperature_in_celsius, set_airport_temperature_in_celsius] = useState(null);\n                let [airport_temperature_in_fahrenheit, set_airport_temperature_in_fahrenheit] = useState(null);\n                let [flight_category, set_flight_category] = useState(null);\n                let [wind_direction, set_wind_direction] = useState(null);\n                let [wind_speed, set_wind_speed] = useState(null);\n                set_icao_code(response.data.icao)\n                setAirportName(response.data.station.name)\n                setAirportLocation(response.data.station.location)\n                set_airport_raw_text(response.data.raw_text);\n                set_flight_category(response.data.flight_category);\n                if(response.data.temperature.celsius === undefined && response.data.temperature.fahrenheit === undefined) { \n                    set_airport_temperature_in_celsius(response.data.temperature.minimum.celsius);\n                    set_airport_temperature_in_fahrenheit(response.data.temperature.minimum.fahrenheit);\n                 } else { \n                        set_airport_temperature_in_celsius(response.data.temperature.celsius); \n                        set_airport_temperature_in_fahrenheit(response.data.temperature.fahrenheit); \n                    }\n                if(response.data.wind.degrees >= 100) { set_wind_direction(response.data.wind.degrees); } else {\n                    padded_wind_direction = response.data.wind.degrees.toString();\n                    set_wind_direction(padded_wind_direction.padStart(3, '0'));\n                }\n                set_wind_speed(response.data.wind.speed_kts);\n            })\n            .catch(err => { console.log(err); });\n    // empty dependency array means this effect will only run once (like componentDidMount in classes)\n    }, [wind_direction]);\n    return (\n        <>\n          <main>\n              {lodash.isEmpty(icao_code) ? (\n                  <h1>That airport does not exist</h1>\n              ) : (\n                \n                <div>\n                    <div>\n                        <Link to={`/${icao_code}`}>{icao_code}</Link><br></br>\n                        <Link to={`/metar/${icao_code}`} onClick={(() => window.location.reload())}>Metar</Link>\n                    </div>\n                <h1>{icao_code}</h1>\n                <div>\n                  <h2>{airportName}</h2>\n                  <h3>{airportLocation}</h3>\n                  </div>\n                <div>\n                    <div className=\"metarTitle\">\n                      <h3>METAR - Current</h3>\n                    </div>\n                    <div className=\"metarTable\">\n                        <table className=\"table\">\n                            <tbody>\n                                <tr>\n                                    <th colSpan={2}>\n                                        <p>{airport_raw_text}</p>\n                                    </th>\n                                </tr>\n                                <tr>\n                                    <th>Flight Category</th>\n                                    <td>\n                                    <span className=\"badge text-white\">\n                                      {flight_category}\n                                    </span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>Wind</th>\n                                    <td>\n                                        {wind_direction}° at {wind_speed} KTS\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>Temperature</th>\n                                    <td>\n                                        {airport_temperature_in_celsius}° C / {airport_temperature_in_fahrenheit}° F\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n          )}\n          </main>\n        </>\n    );\n}\n\nexport default Metar;\n"]},"metadata":{},"sourceType":"module"}