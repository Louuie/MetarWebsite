{"ast":null,"code":"var _jsxFileName = \"/Users/elias/Desktop/Desktop - Elias\\u2019s MacBook Pro/MetarWebsite/frontend/src/components/Airport/Metar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport lodash from 'lodash';\nimport { useParams } from 'react-router-dom';\nimport './Metar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Metar() {\n  _s();\n\n  let params = useParams();\n  let padded_wind_direction;\n  let [icao_code, set_icao_code] = useState(null);\n  let [airportName, setAirportName] = useState(null);\n  let [airportLocation, setAirportLocation] = useState(null);\n  let [airport_raw_text, set_airport_raw_text] = useState(null);\n  let [airport_temperature_in_celsius, set_airport_temperature_in_celsius] = useState(null);\n  let [airport_temperature_in_fahrenheit, set_airport_temperature_in_fahrenheit] = useState(null);\n  let [flight_category, set_flight_category] = useState(null);\n  let [wind_direction, set_wind_direction] = useState(null);\n  let [wind_speed, set_wind_speed] = useState(null);\n  useEffect(() => {\n    // GET request using axios inside useEffect React hook\n    axios.get(`http://localhost:4000/metar?icao=${params.airport}`).then(response => {\n      set_icao_code(response.data.icao);\n      setAirportName(response.data.station.name);\n      setAirportLocation(response.data.station.location);\n      set_airport_raw_text(response.data.raw_text);\n      set_flight_category(response.data.flight_category);\n      console.log(response.data.temperature.minimum.celsius);\n\n      if (lodash.isEmpty(response.data.temperature.fahrenheit) && lodash.isEmpty(response.data.temperature.fahrenheit)) {\n        set_airport_temperature_in_celsius(response.data.temperature.minimum.celsius);\n        set_airport_temperature_in_fahrenheit(response.data.temperature.minimum.fahrenheit);\n      } else {\n        set_airport_temperature_in_celsius(response.data.temperature.celsius);\n        set_airport_temperature_in_fahrenheit(response.data.temperature.fahrenheit);\n      }\n\n      if (response.data.wind.degrees >= 100) {\n        set_wind_direction(response.data.wind.degrees);\n      } else {\n        padded_wind_direction = response.data.wind.degrees.toString();\n        set_wind_direction(padded_wind_direction.padStart(3, '0'));\n      }\n\n      set_wind_speed(response.data.wind.speed_kts);\n    }).catch(err => {\n      console.log(err);\n    }); // empty dependency array means this effect will only run once (like componentDidMount in classes)\n  }, [wind_direction]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: lodash.isEmpty(icao_code) ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"That airport does not exist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: icao_code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: airportName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: airportLocation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metarTitle\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"METAR - Current\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metarTable\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"th\", {\n                    colSpan: 2,\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: airport_raw_text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Flight Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"badge text-white\",\n                      children: flight_category\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Wind\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [wind_direction, \"\\xB0 at \", wind_speed, \" KTS\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Temperature\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [airport_temperature_in_celsius, \"\\xB0 C / \", airport_temperature_in_fahrenheit, \"\\xB0 F\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s(Metar, \"yAUSzxYrDXzrnq6QQ44LZoKcuPs=\", false, function () {\n  return [useParams];\n});\n\n_c = Metar;\nexport default Metar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Metar\");","map":{"version":3,"sources":["/Users/elias/Desktop/Desktop - Eliasâ€™s MacBook Pro/MetarWebsite/frontend/src/components/Airport/Metar.jsx"],"names":["React","useEffect","useState","axios","lodash","useParams","Metar","params","padded_wind_direction","icao_code","set_icao_code","airportName","setAirportName","airportLocation","setAirportLocation","airport_raw_text","set_airport_raw_text","airport_temperature_in_celsius","set_airport_temperature_in_celsius","airport_temperature_in_fahrenheit","set_airport_temperature_in_fahrenheit","flight_category","set_flight_category","wind_direction","set_wind_direction","wind_speed","set_wind_speed","get","airport","then","response","data","icao","station","name","location","raw_text","console","log","temperature","minimum","celsius","isEmpty","fahrenheit","wind","degrees","toString","padStart","speed_kts","catch","err"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport lodash from 'lodash';\nimport { useParams } from 'react-router-dom';\nimport './Metar.css';\n\nfunction Metar() {\n    let params = useParams();\n    let padded_wind_direction\n    let [icao_code, set_icao_code] = useState(null);\n    let [airportName, setAirportName] = useState(null);\n    let [airportLocation, setAirportLocation] = useState(null);\n    let [airport_raw_text, set_airport_raw_text] = useState(null);\n    let [airport_temperature_in_celsius, set_airport_temperature_in_celsius] = useState(null);\n    let [airport_temperature_in_fahrenheit, set_airport_temperature_in_fahrenheit] = useState(null);\n    let [flight_category, set_flight_category] = useState(null);\n    let [wind_direction, set_wind_direction] = useState(null);\n    let [wind_speed, set_wind_speed] = useState(null);\n\n\n    useEffect(() => {\n        // GET request using axios inside useEffect React hook\n        axios.get(`http://localhost:4000/metar?icao=${params.airport}`)\n            .then(response => {\n                set_icao_code(response.data.icao)\n                setAirportName(response.data.station.name)\n                setAirportLocation(response.data.station.location)\n                set_airport_raw_text(response.data.raw_text);\n                set_flight_category(response.data.flight_category);\n                console.log(response.data.temperature.minimum.celsius);\n                if(lodash.isEmpty(response.data.temperature.fahrenheit) && lodash.isEmpty(response.data.temperature.fahrenheit)) { \n                    set_airport_temperature_in_celsius(response.data.temperature.minimum.celsius);\n                    set_airport_temperature_in_fahrenheit(response.data.temperature.minimum.fahrenheit);\n                 } else { set_airport_temperature_in_celsius(response.data.temperature.celsius); set_airport_temperature_in_fahrenheit(response.data.temperature.fahrenheit); }\n                if(response.data.wind.degrees >= 100) { set_wind_direction(response.data.wind.degrees); } else {\n                    padded_wind_direction = response.data.wind.degrees.toString();\n                    set_wind_direction(padded_wind_direction.padStart(3, '0'));\n                }\n                set_wind_speed(response.data.wind.speed_kts);\n            })\n            .catch(err => { console.log(err); });\n    // empty dependency array means this effect will only run once (like componentDidMount in classes)\n    }, [wind_direction]);\n    return (\n        <>\n          <main>\n              {lodash.isEmpty(icao_code) ? (\n                  <h1>That airport does not exist</h1>\n              ) : (\n                <div>\n                <h1>{icao_code}</h1>\n                <div>\n                  <h2>{airportName}</h2>\n                  <h3>{airportLocation}</h3>\n                  </div>\n                <div>\n                    <div className=\"metarTitle\">\n                      <h3>METAR - Current</h3>\n                    </div>\n                    <div className=\"metarTable\">\n                        <table className=\"table\">\n                            <tbody>\n                                <tr>\n                                    <th colSpan={2}>\n                                        <p>{airport_raw_text}</p>\n                                    </th>\n                                </tr>\n                                <tr>\n                                    <th>Flight Category</th>\n                                    <td>\n                                    <span className=\"badge text-white\">\n                                      {flight_category}\n                                    </span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>Wind</th>\n                                    <td>\n                                        {wind_direction}Â° at {wind_speed} KTS\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>Temperature</th>\n                                    <td>\n                                        {airport_temperature_in_celsius}Â° C / {airport_temperature_in_fahrenheit}Â° F\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n          )}\n          </main>\n        </>\n    );\n}\n\nexport default Metar;\n"]},"metadata":{},"sourceType":"module"}