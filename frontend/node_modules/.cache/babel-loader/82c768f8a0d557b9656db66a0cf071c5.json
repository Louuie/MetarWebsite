{"ast":null,"code":"var _jsxFileName = \"/Users/elias/Desktop/Desktop - Elias\\u2019s MacBook Pro/MetarWebsite/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport Home from './components/Home.jsx';\nimport Airport from './components/Airport.jsx';\nimport Login from './components/Login.tsx';\nimport User from './components/User.tsx';\nimport env from 'react-dotenv';\nimport { useGoogleLogin } from 'react-google-login';\nimport { useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setLoginStatus] = useState(false);\n  const [userName, setUserName] = useState(null);\n  const [userEmail, setUserEmail] = useState(null);\n\n  const onLoginSuccess = res => {\n    if (res.profileObj) {\n      setLoginStatus(true);\n      setUserName(res.profileObj.name);\n      setUserEmail(res.profileObj.email);\n    } else {\n      setLoginStatus(false);\n    }\n\n    console.log(res.profileObj);\n  };\n\n  const onLoginFailure = res => {\n    console.log(res);\n  };\n\n  const {\n    signIn,\n    loaded\n  } = useGoogleLogin({\n    onSuccess: onLoginSuccess,\n    onFailure: onLoginFailure,\n    isSignedIn: true,\n    clientId: env.REACT_APP_google_clientId\n  });\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/user\",\n        element: /*#__PURE__*/_jsxDEV(User, {\n          fullName: userName,\n          email: userEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 83\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/:airport\",\n        element: /*#__PURE__*/_jsxDEV(Airport, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 165\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 132\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"MJ1KHUG7ZmAyGbYLJ1dMqG0A4/o=\", false, function () {\n  return [useGoogleLogin];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/elias/Desktop/Desktop - Eliasâ€™s MacBook Pro/MetarWebsite/frontend/src/App.tsx"],"names":["Home","Airport","Login","User","env","useGoogleLogin","useState","Routes","Route","App","isLoggedIn","setLoginStatus","userName","setUserName","userEmail","setUserEmail","onLoginSuccess","res","profileObj","name","email","console","log","onLoginFailure","signIn","loaded","onSuccess","onFailure","isSignedIn","clientId","REACT_APP_google_clientId"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,uBAAjB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAAmBC,QAAnB,QAAmC,OAAnC;AACA,SAAwBC,MAAxB,EAAgCC,KAAhC,QAAuD,kBAAvD;AACA,OAAO,WAAP;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,cAAb,IAA+BL,QAAQ,CAAC,KAAD,CAA7C;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAa,IAAb,CAAxC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAa,IAAb,CAA1C;;AACA,QAAMU,cAAc,GAAIC,GAAD,IAAS;AAC5B,QAAGA,GAAG,CAACC,UAAP,EAAmB;AACfP,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,MAAAA,WAAW,CAACI,GAAG,CAACC,UAAJ,CAAeC,IAAhB,CAAX;AACAJ,MAAAA,YAAY,CAACE,GAAG,CAACC,UAAJ,CAAeE,KAAhB,CAAZ;AACH,KAJD,MAIO;AAAET,MAAAA,cAAc,CAAC,KAAD,CAAd;AAAwB;;AACjCU,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACC,UAAhB;AACH,GAPD;;AASA,QAAMK,cAAc,GAAIN,GAAD,IAAS;AAC5BI,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACH,GAFD;;AAIA,QAAM;AAAEO,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBpB,cAAc,CAAC;AACtCqB,IAAAA,SAAS,EAAEV,cAD2B;AAEtCW,IAAAA,SAAS,EAAEJ,cAF2B;AAGtCK,IAAAA,UAAU,EAAE,IAH0B;AAItCC,IAAAA,QAAQ,EAAEzB,GAAG,CAAC0B;AAJwB,GAAD,CAAzC;AAMA,sBACI,QAAC,MAAD;AAAA,cACKpB,UAAU,gBACP;AAAA,8BAAE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,cAAF,eAAuC,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,OAAO,eAAE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEE,QAAhB;AAA0B,UAAA,KAAK,EAAEE;AAAjC;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,cAAvC,eAAqH,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,cAArH;AAAA,oBADO,gBAGP,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,UADJ;AASD;;GAhCQL,G;UAiBoBJ,c;;;KAjBpBI,G;AAkCT,eAAeA,GAAf","sourcesContent":["import Home from './components/Home.jsx';\nimport Airport from './components/Airport.jsx'\nimport Login from './components/Login.tsx'\nimport User from './components/User.tsx';\nimport env from 'react-dotenv';\nimport { useGoogleLogin } from 'react-google-login';\nimport { Children, useState } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n  const [isLoggedIn, setLoginStatus] = useState(false);\n  const [userName, setUserName] = useState<any | null>(null);\n  const [userEmail, setUserEmail] = useState<any | null>(null);\n  const onLoginSuccess = (res) => {\n      if(res.profileObj) {\n          setLoginStatus(true);\n          setUserName(res.profileObj.name);\n          setUserEmail(res.profileObj.email);\n      } else { setLoginStatus(false); }\n      console.log(res.profileObj);\n  };\n  \n  const onLoginFailure = (res) => {\n      console.log(res);\n  };\n\n  const { signIn, loaded } = useGoogleLogin({\n      onSuccess: onLoginSuccess,\n      onFailure: onLoginFailure,\n      isSignedIn: true,\n      clientId: env.REACT_APP_google_clientId\n  });\n  return (\n      <Routes>\n          {isLoggedIn ? (\n              <><Route path=\"/\" element={<Home />} /><Route path=\"/user\" element={<User fullName={userName} email={userEmail}/>} /><Route path=\"/:airport\" element={<Airport />} /></>\n          ) : (\n              <Route path=\"/login\" element={<Login />} />\n          )}\n      </Routes>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}