{"ast":null,"code":"var _jsxFileName = \"/Users/elias/Desktop/Desktop - Elias\\u2019s MacBook Pro/MetarWebsite/frontend/src/components/Login/ProtectedRoute.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useAuth = () => {\n  const user = {\n    loggedIn: false\n  };\n  return user && user.loggedIn;\n};\n\nconst ProtectedRoute = () => {\n  _s();\n\n  const isAuth = useAuth();\n  return isAuth ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 21\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    replace: true,\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 34\n  }, this);\n};\n\n_s(ProtectedRoute, \"/wDgZUEcG5U+Eq7/9u8RJtk8mAs=\", false, function () {\n  return [useAuth];\n});\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/elias/Desktop/Desktop - Eliasâ€™s MacBook Pro/MetarWebsite/frontend/src/components/Login/ProtectedRoute.tsx"],"names":["React","Navigate","Outlet","useAuth","user","loggedIn","ProtectedRoute","isAuth"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,kBAAjC;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAMC,IAAI,GAAG;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAb;AACA,SAAOD,IAAI,IAAIA,IAAI,CAACC,QAApB;AACH,CAHD;;AAKA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAMC,MAAM,GAAGJ,OAAO,EAAtB;AACA,SAAOI,MAAM,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAH,gBAAgB,QAAC,QAAD;AAAU,IAAA,OAAO,MAAjB;AAAkB,IAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,UAA7B;AACH,CAHD;;GAAMD,c;UACaH,O;;;KADbG,c;AAKN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport { Navigate, Outlet } from \"react-router-dom\";\n\n\nconst useAuth = () => {\n    const user = { loggedIn: false };\n    return user && user.loggedIn;\n};\n\nconst ProtectedRoute = () => {\n    const isAuth = useAuth();\n    return isAuth ? <Outlet /> : <Navigate replace to=\"/login\" />\n};\n\nexport default ProtectedRoute;"]},"metadata":{},"sourceType":"module"}