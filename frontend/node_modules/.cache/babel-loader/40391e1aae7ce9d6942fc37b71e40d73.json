{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elias\\\\Documents\\\\Programming\\\\MetarWebsite\\\\frontend\\\\src\\\\components\\\\Airport\\\\Airport.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport GoogleMapReact from 'google-map-react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Airport(props) {\n  _s();\n\n  let params = useParams();\n  let isSignedIn = props.isSignedIn;\n  let [isLoading, setLoadingStatus] = useState(true);\n  let [icao_code, set_icao_code] = useState(params.airport);\n  let [airportName, setAirportName] = useState(null);\n  let [airportLocation, setAirportLocation] = useState(null);\n  let [airportLongitude, setAirportLongitude] = useState(null);\n  let [airportLatitude, setAirportLatitude] = useState(null);\n  const lat = airportLatitude;\n  const long = airportLongitude;\n  const map = {\n    center: {\n      lat: lat,\n      lng: long\n    },\n    zoom: 14\n  };\n  useEffect(() => {\n    axios.get(`http://localhost:4000/metar?icao=${icao_code}`).then(res => {\n      set_icao_code(res.data.icao);\n      setAirportName(res.data.station.name);\n      setAirportLocation(res.data.station.location);\n      setAirportLongitude(res.data.station.geometry.coordinates[0]);\n      setAirportLatitude(res.data.station.geometry.coordinates[1]);\n    }).catch(err => {\n      console.log(err);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Insert Spinner Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: icao_code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: airportName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: airportLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '50vh',\n          width: '50%'\n        },\n        children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n          bootstrapURLKeys: {\n            key: \"AIzaSyDt9vPcQ0Lz7XfQKUr6UgtgXMD83-tjw0Y\"\n          },\n          center: map.center,\n          zoom: map.zoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Airport, \"V6Y32Z+Na3BR+k6/9I3iyI7ssbs=\", false, function () {\n  return [useParams];\n});\n\n_c = Airport;\nexport default Airport;\n\nvar _c;\n\n$RefreshReg$(_c, \"Airport\");","map":{"version":3,"sources":["C:/Users/Elias/Documents/Programming/MetarWebsite/frontend/src/components/Airport/Airport.tsx"],"names":["React","useEffect","useState","GoogleMapReact","axios","useParams","Airport","props","params","isSignedIn","isLoading","setLoadingStatus","icao_code","set_icao_code","airport","airportName","setAirportName","airportLocation","setAirportLocation","airportLongitude","setAirportLongitude","airportLatitude","setAirportLatitude","lat","long","map","center","lng","zoom","get","then","res","data","icao","station","name","location","geometry","coordinates","catch","err","console","log","height","width","key"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport axios from 'axios';\r\nimport lodash from 'lodash';\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\nfunction Airport(props) {\r\n    let params = useParams();\r\n    let isSignedIn = props.isSignedIn;\r\n    let [isLoading, setLoadingStatus] = useState(true);\r\n    let [icao_code, set_icao_code] = useState(params.airport);\r\n    let [airportName, setAirportName] = useState(null);\r\n    let [airportLocation, setAirportLocation] = useState(null);\r\n    let [airportLongitude, setAirportLongitude] = useState(null);\r\n    let [airportLatitude, setAirportLatitude] = useState(null);\r\n    const lat = airportLatitude;\r\n    const long = airportLongitude;\r\n    const map = {\r\n        center: {\r\n          lat: lat,\r\n          lng: long\r\n        },\r\n        zoom: 14\r\n      };\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:4000/metar?icao=${icao_code}`)\r\n        .then((res) => {\r\n            set_icao_code(res.data.icao);\r\n            setAirportName(res.data.station.name);\r\n            setAirportLocation(res.data.station.location);\r\n            setAirportLongitude(res.data.station.geometry.coordinates[0]);\r\n            setAirportLatitude(res.data.station.geometry.coordinates[1]);\r\n        }).catch((err) => { console.log(err); });\r\n    });\r\n\r\n    return (\r\n        <main>\r\n            {isLoading ? (\r\n                <h1>Insert Spinner Here</h1>\r\n            ) : (\r\n            <div>\r\n                {}\r\n                <div>\r\n                <h1>{icao_code}</h1>\r\n                </div>\r\n                <div>\r\n                <h2>{airportName}</h2>\r\n                <h2>{airportLocation}</h2>\r\n                </div>\r\n                <div style={{ height: '50vh', width: '50%' }}>\r\n                    <GoogleMapReact\r\n                        bootstrapURLKeys={{key: \"AIzaSyDt9vPcQ0Lz7XfQKUr6UgtgXMD83-tjw0Y\"}}\r\n                        center={map.center}\r\n                        zoom={map.zoom}\r\n                    >\r\n                    </GoogleMapReact>\r\n                </div>\r\n            </div>\r\n            )}\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Airport;"]},"metadata":{},"sourceType":"module"}