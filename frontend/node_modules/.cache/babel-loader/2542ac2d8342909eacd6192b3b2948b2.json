{"ast":null,"code":"var _jsxFileName = \"/Users/elias/Desktop/Desktop - Elias\\u2019s MacBook Pro/MetarWebsite/frontend/src/App.tsx\",\n    _s2 = $RefreshSig$();\n\nimport Home from './components/Home/Home.jsx';\nimport Metar from './components/Airport/Metar.jsx';\nimport Login from './components/Login/Login.tsx';\nimport User from './components/User/User.tsx';\nimport { useGoogleLogin } from 'react-google-login';\nimport { useEffect, useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [isLoggedIn, setLoginStatus] = useState(true);\n  const [userName, setUserName] = useState(null);\n  const [userEmail, setUserEmail] = useState(null);\n  const [userImageUrl, setUserImageUrl] = useState(null);\n\n  _s(useEffect(_s(() => {\n    _s();\n\n    const onLoginSuccess = res => {\n      if (res.profileObj) {\n        setLoginStatus(true);\n        setUserName(res.profileObj.name);\n        setUserEmail(res.profileObj.email);\n        setUserImageUrl(res.profileObj.imageUrl);\n      } else {\n        setLoginStatus(false);\n      }\n\n      console.log(res.profileObj);\n    };\n\n    const onLoginFailure = res => {\n      console.log(res);\n    };\n\n    const {\n      signIn,\n      loaded\n    } = useGoogleLogin({\n      onSuccess: onLoginSuccess,\n      onFailure: onLoginFailure,\n      isSignedIn: true,\n      clientId: \"817352508433-svhmh1kd4bg80l1jb10g9kq91qkvslv6.apps.googleusercontent.com\"\n    });\n  }, \"FRGqa4pEe0nSMV+uJG1/KbNc5oE=\", false, function () {\n    return [useGoogleLogin];\n  })), \"FRGqa4pEe0nSMV+uJG1/KbNc5oE=\", false, function () {\n    return [useGoogleLogin];\n  });\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/user\",\n        element: /*#__PURE__*/_jsxDEV(User, {\n          fullName: userName,\n          email: userEmail,\n          imageUrl: userImageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 83\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/metar/:airport\",\n        element: /*#__PURE__*/_jsxDEV(Metar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 195\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 156\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(App, \"bvxzEsWq1WaYK0t6k7xNJg8pOmU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/elias/Desktop/Desktop - Eliasâ€™s MacBook Pro/MetarWebsite/frontend/src/App.tsx"],"names":["Home","Metar","Login","User","useGoogleLogin","useEffect","useState","Routes","Route","App","isLoggedIn","setLoginStatus","userName","setUserName","userEmail","setUserEmail","userImageUrl","setUserImageUrl","onLoginSuccess","res","profileObj","name","email","imageUrl","console","log","onLoginFailure","signIn","loaded","onSuccess","onFailure","isSignedIn","clientId"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,4BAAjB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AAEA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,SAAwBC,MAAxB,EAAgCC,KAAhC,QAAuD,kBAAvD;AACA,OAAO,WAAP;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,cAAb,IAA+BL,QAAQ,CAAC,IAAD,CAA7C;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAa,IAAb,CAAxC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAa,IAAb,CAA1C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAa,IAAb,CAAhD;;AACA,KAAAD,SAAS,IAAC,MAAM;AAAA;;AACd,UAAMa,cAAc,GAAIC,GAAD,IAAS;AAC5B,UAAGA,GAAG,CAACC,UAAP,EAAmB;AACfT,QAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,QAAAA,WAAW,CAACM,GAAG,CAACC,UAAJ,CAAeC,IAAhB,CAAX;AACAN,QAAAA,YAAY,CAACI,GAAG,CAACC,UAAJ,CAAeE,KAAhB,CAAZ;AACAL,QAAAA,eAAe,CAACE,GAAG,CAACC,UAAJ,CAAeG,QAAhB,CAAf;AACH,OALD,MAKO;AAAEZ,QAAAA,cAAc,CAAC,KAAD,CAAd;AAAwB;;AACjCa,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACC,UAAhB;AACH,KARD;;AAUA,UAAMM,cAAc,GAAIP,GAAD,IAAS;AAC5BK,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACH,KAFD;;AAIA,UAAM;AAAEQ,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAqBxB,cAAc,CAAC;AACtCyB,MAAAA,SAAS,EAAEX,cAD2B;AAEtCY,MAAAA,SAAS,EAAEJ,cAF2B;AAGtCK,MAAAA,UAAU,EAAE,IAH0B;AAItCC,MAAAA,QAAQ,EAAE;AAJ4B,KAAD,CAAzC;AAMD,GArBQ;AAAA,YAeoB5B,cAfpB;AAAA,KAAT;AAAA,YAe6BA,cAf7B;AAAA;;AAsBA,sBACI,QAAC,MAAD;AAAA,cACKM,UAAU,gBACP;AAAA,8BAAE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,cAAF,eAAuC,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,OAAO,eAAE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEE,QAAhB;AAA0B,UAAA,KAAK,EAAEE,SAAjC;AAA4C,UAAA,QAAQ,EAAEE;AAAtD;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,cAAvC,eAA6I,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,iBAAZ;AAA8B,QAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,cAA7I;AAAA,oBADO,gBAGP,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,UADJ;AASD;;IApCQP,G;;KAAAA,G;AAsCT,eAAeA,GAAf","sourcesContent":["import Home from './components/Home/Home.jsx';\nimport Metar from './components/Airport/Metar.jsx'\nimport Login from './components/Login/Login.tsx'\nimport User from './components/User/User.tsx';\nimport env from 'dotenv';\nimport { useGoogleLogin } from 'react-google-login';\nimport { Children, useEffect, useState } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n  const [isLoggedIn, setLoginStatus] = useState(true);\n  const [userName, setUserName] = useState<any | null>(null);\n  const [userEmail, setUserEmail] = useState<any | null>(null);\n  const [userImageUrl, setUserImageUrl] = useState<any | null>(null);\n  useEffect(() => {\n    const onLoginSuccess = (res) => {\n        if(res.profileObj) {\n            setLoginStatus(true);\n            setUserName(res.profileObj.name);\n            setUserEmail(res.profileObj.email);\n            setUserImageUrl(res.profileObj.imageUrl);\n        } else { setLoginStatus(false); }\n        console.log(res.profileObj);\n    };\n    \n    const onLoginFailure = (res) => {\n        console.log(res);\n    };\n  \n    const { signIn, loaded } = useGoogleLogin({\n        onSuccess: onLoginSuccess,\n        onFailure: onLoginFailure,\n        isSignedIn: true,\n        clientId: \"817352508433-svhmh1kd4bg80l1jb10g9kq91qkvslv6.apps.googleusercontent.com\"\n    });\n  })\n  return (\n      <Routes>\n          {isLoggedIn ? (\n              <><Route path=\"/\" element={<Home />} /><Route path=\"/user\" element={<User fullName={userName} email={userEmail} imageUrl={userImageUrl}/>} /><Route path=\"/metar/:airport\" element={<Metar />} /></>\n          ) : (\n              <Route path=\"*\" element={<Login />} />\n          )}\n      </Routes>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}