{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elias\\\\Documents\\\\Programming\\\\MetarWebsite\\\\frontend\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport Home from './components/Home/Home.tsx';\nimport Metar from './components/Airport/Metar.tsx';\nimport User from './components/User/User.tsx';\nimport { firebaseAuth } from './firebase';\nimport { useEffect, useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport Airport from './components/Airport/Airport.tsx';\nimport { GoogleAuthProvider, signInWithPopup, onAuthStateChanged } from 'firebase/auth';\nimport \"./spinner.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [auth, setAuth] = useState(false || window.localStorage.getItem('auth') === 'true');\n  let [token, setToken] = useState(null);\n  const provider = new GoogleAuthProvider();\n  useEffect(() => {\n    onAuthStateChanged(firebaseAuth, user => {\n      if (user) {\n        window.localStorage.setItem('auth', 'true');\n        setAuth(true);\n        user.getIdToken().then(token => setToken(token));\n      } else setAuth(false);\n    });\n  }, []);\n\n  const googleAuth = () => {\n    signInWithPopup(firebaseAuth, provider).then(res => {\n      console.log(res);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: auth ? /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/user\",\n        element: /*#__PURE__*/_jsxDEV(User, {\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/metar/:airport\",\n        element: /*#__PURE__*/_jsxDEV(Metar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/:airport\",\n        element: /*#__PURE__*/_jsxDEV(Airport, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: googleAuth,\n      children: \"Login with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"EflbY1PYLe4CmnMmvSsmrr558xs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Elias/Documents/Programming/MetarWebsite/frontend/src/App.tsx"],"names":["Home","Metar","User","firebaseAuth","useEffect","useState","Routes","Route","Airport","GoogleAuthProvider","signInWithPopup","onAuthStateChanged","App","auth","setAuth","window","localStorage","getItem","token","setToken","provider","user","setItem","getIdToken","then","googleAuth","res","console","log","catch","err"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,4BAAjB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AAEA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,SAAQC,YAAR,QAA2B,YAA3B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA6B,kBAA7B;AAEA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,kBAAT,EAA6BC,eAA7B,EAA8CC,kBAA9C,QAAwE,eAAxE;AACA,OAAO,eAAP;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEb,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,SAASU,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,MAAwC,MAAlD,CAA9B;AACA,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMe,QAAQ,GAAG,IAAIX,kBAAJ,EAAjB;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,kBAAkB,CAACR,YAAD,EAAgBkB,IAAD,IAAU;AACzC,UAAGA,IAAH,EAAS;AACPN,QAAAA,MAAM,CAACC,YAAP,CAAoBM,OAApB,CAA4B,MAA5B,EAAoC,MAApC;AACAR,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAO,QAAAA,IAAI,CAACE,UAAL,GAAkBC,IAAlB,CAAwBN,KAAD,IAAWC,QAAQ,CAACD,KAAD,CAA1C;AACD,OAJD,MAIOJ,OAAO,CAAC,KAAD,CAAP;AACR,KANiB,CAAlB;AAOD,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMW,UAAU,GAAG,MAAM;AACvBf,IAAAA,eAAe,CAACP,YAAD,EAAeiB,QAAf,CAAf,CAAwCI,IAAxC,CAA8CE,GAAD,IAAS;AACpDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAFD,EAEGG,KAFH,CAEUC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAFlB;AAGD,GAJD;;AAOA,sBACE;AAAA,cACGjB,IAAI,gBACG,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,OAAO,eAAE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEK;AAAb;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,iBAAZ;AAA8B,QAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAOD;AAAQ,MAAA,OAAO,EAAEO,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARN,mBADF;AAYD;;GAnCQb,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import Home from './components/Home/Home.tsx';\r\nimport Metar from './components/Airport/Metar.tsx'\r\nimport Login from './components/Login/Login.tsx'\r\nimport User from './components/User/User.tsx';\r\nimport {firebaseAuth} from './firebase';\r\nimport { useEffect, useState } from 'react';\r\nimport {Routes, Route } from 'react-router-dom';\r\nimport env from \"dotenv\";\r\nimport './App.css';\r\nimport Airport from './components/Airport/Airport.tsx';\r\nimport { GoogleAuthProvider, signInWithPopup, onAuthStateChanged } from 'firebase/auth';\r\nimport \"./spinner.css\";\r\n\r\n\r\nfunction App() {\r\n\r\n  let [auth, setAuth] = useState(false || window.localStorage.getItem('auth') === 'true');\r\n  let [token, setToken] = useState(null);\r\n  const provider = new GoogleAuthProvider();\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(firebaseAuth, (user) => {\r\n      if(user) {\r\n        window.localStorage.setItem('auth', 'true');\r\n        setAuth(true);\r\n        user.getIdToken().then((token) => setToken(token));\r\n      } else setAuth(false);\r\n    });\r\n  }, []);\r\n\r\n  const googleAuth = () => {\r\n    signInWithPopup(firebaseAuth, provider).then((res) => {\r\n      console.log(res);\r\n    }).catch((err) => console.log(err))\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      {auth ? (\r\n              <Routes>\r\n                <Route path=\"/\" element={<Home />} />\r\n                <Route path=\"/user\" element={<User token={token} />} />\r\n                <Route path=\"/metar/:airport\" element={<Metar />} />\r\n                <Route path=\"/:airport\" element={<Airport />} />\r\n              </Routes>\r\n      ) : <button onClick={googleAuth}>Login with Google</button>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}