[{"C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\index.js":"1","C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\App.tsx":"2","C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\components\\Home\\Home.tsx":"4","C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\components\\Airport\\Airport.tsx":"5","C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\components\\User\\User.tsx":"6","C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\components\\Airport\\Metar.tsx":"7","C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\components\\Login\\Login.tsx":"8","C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\firebase.js":"9"},{"size":624,"mtime":1645677831501,"results":"10","hashOfConfig":"11"},{"size":927,"mtime":1645939127812,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1645677831501,"results":"13","hashOfConfig":"11"},{"size":1487,"mtime":1645900826340,"results":"14","hashOfConfig":"11"},{"size":2944,"mtime":1645900826969,"results":"15","hashOfConfig":"11"},{"size":1891,"mtime":1646007132389,"results":"16","hashOfConfig":"11"},{"size":12034,"mtime":1645902366545,"results":"17","hashOfConfig":"11"},{"size":914,"mtime":1646097862068,"results":"18","hashOfConfig":"11"},{"size":986,"mtime":1646107456796,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},"lmb5ah",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\index.js",["53","54"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.tsx';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter, Routes, Route} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["55","56"],"C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\App.tsx",["57","58","59","60"],[],"import Home from './components/Home/Home.tsx';\r\nimport Metar from './components/Airport/Metar.tsx'\r\nimport Login from './components/Login/Login.tsx'\r\nimport User from './components/User/User.tsx';\r\nimport { useGoogleLogin } from 'react-google-login';\r\nimport { useEffect, useState } from 'react';\r\nimport {Routes, Route } from 'react-router-dom';\r\nimport env from \"dotenv\";\r\nimport './App.css';\r\nimport Airport from './components/Airport/Airport.tsx';\r\nimport \"./spinner.css\";\r\n\r\n\r\nfunction App() {\r\n  \r\n\r\n  return (\r\n      <Routes>\r\n            <>\r\n                <Route path=\"/\" element={<Home />} />\r\n                <Route path=\"/user\" element={<User />} />\r\n                <Route path=\"/login\" element={<Login />} />\r\n                <Route path=\"/metar/:airport\" element={<Metar />} />\r\n                <Route path=\"/:airport\" element={<Airport />} />\r\n            </>\r\n      </Routes>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["61","62"],"C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\components\\Home\\Home.tsx",[],[],"C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\components\\Airport\\Airport.tsx",["63"],[],"import React, {useEffect, useState} from \"react\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport axios from 'axios';\r\nimport lodash from 'lodash';\r\nimport { useParams, Link, Navigate } from 'react-router-dom';\r\n\r\nfunction Airport(props) {\r\n    let params = useParams();\r\n    let isSignedIn = props.isSignedIn;\r\n    let [isLoading, setLoadingStatus] = useState(true);\r\n    let [icao_code, set_icao_code] = useState(params.airport);\r\n    let [airportName, setAirportName] = useState(null);\r\n    let [airportLocation, setAirportLocation] = useState(null);\r\n    let [airportLongitude, setAirportLongitude] = useState(null);\r\n    let [airportLatitude, setAirportLatitude] = useState(null);\r\n    const lat = airportLatitude;\r\n    const long = airportLongitude;\r\n    const map = {\r\n        center: {\r\n          lat: lat,\r\n          lng: long\r\n        },\r\n        zoom: 14\r\n      };\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:4000/metar?icao=${icao_code}`)\r\n        .then((res) => {\r\n            set_icao_code(res.data.icao);\r\n            setAirportName(res.data.station.name);\r\n            setAirportLocation(res.data.station.location);\r\n            setAirportLongitude(res.data.station.geometry.coordinates[0]);\r\n            setAirportLatitude(res.data.station.geometry.coordinates[1]);\r\n            setTimeout(function() {\r\n                setLoadingStatus(false);\r\n            }, 750)\r\n        }).catch((err) => { console.log(err); });\r\n    });\r\n\r\n    return (\r\n        <main>\r\n            {isLoading ? (\r\n                    <div className=\"lds-ring\">\r\n                    <div></div><div></div><div></div><div></div>\r\n                    </div>\r\n            ) : (\r\n            <div>\r\n                {isSignedIn ? (\r\n                    <div>\r\n                        {!lodash.isEmpty(icao_code) ? (\r\n                            <div>\r\n                                <div>\r\n                                    <h1>{icao_code}</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h2>{airportName}</h2>\r\n                                    <h2>{airportLocation}</h2>\r\n                                </div>\r\n                                <div style={{ height: '50vh', width: '50%' }}>\r\n                                    <GoogleMapReact bootstrapURLKeys={{key: \"AIzaSyDt9vPcQ0Lz7XfQKUr6UgtgXMD83-tjw0Y\"}}\r\n                                        center={map.center} zoom={map.zoom}>\r\n                                    </GoogleMapReact>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <h1>That airport does not exist!</h1>\r\n                        )}\r\n                    </div>\r\n                ) : (\r\n                    <Navigate to=\"/login\" />\r\n                )}\r\n            </div>\r\n            )}\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Airport;","C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\components\\User\\User.tsx",["64","65"],[],"C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\components\\Airport\\Metar.tsx",["66","67","68"],[],"import React, {useEffect, useState} from \"react\";\r\nimport axios from 'axios';\r\nimport lodash from 'lodash';\r\nimport { useParams, Link, Navigate } from 'react-router-dom';\r\nimport './Metar.css';\r\n\r\nfunction Metar(props) {\r\n    let params = useParams();\r\n    let padded_wind_direction\r\n    let [isLoading, setLoadingStatus] = useState(true);\r\n    let [icao_code, set_icao_code] = useState(params.airport); \r\n    let [airportName, setAirportName] = useState(null);\r\n    let [airportLocation, setAirportLocation] = useState(null);\r\n    let [airport_raw_text, set_airport_raw_text] = useState(null);\r\n    let [airport_temperature_in_celsius, set_airport_temperature_in_celsius] = useState(null);\r\n    let [airport_temperature_in_fahrenheit, set_airport_temperature_in_fahrenheit] = useState(null);\r\n    let [flight_category, set_flight_category] = useState(null);\r\n    let [wind_direction, set_wind_direction] = useState(null);\r\n    let [wind_speed, set_wind_speed] = useState(null);\r\n    let [windExists, setWindExists] = useState(null);\r\n    let [clouds, setClouds] = useState(null);\r\n    let [altimeter, setAltimeter] = useState(null);\r\n\r\n    let isSignedIn = props.isSignedIn; \r\n\r\n\r\n    const fetchData = async () => {\r\n        const res = await axios.get(`http://localhost:4000/metar?icao=${icao_code}`);\r\n        const data = await res.data;\r\n        set_icao_code(data.icao);\r\n        setAirportName(data.station.name);\r\n        setAirportLocation(data.station.location);\r\n        set_airport_raw_text(data.raw_text);\r\n        set_flight_category(data.flight_category);\r\n        if(data.temperature.celsius === undefined && data.temperature.fahrenheit === undefined) { \r\n            set_airport_temperature_in_celsius(data.temperature.minimum.celsius);\r\n            set_airport_temperature_in_fahrenheit(data.temperature.minimum.fahrenheit);\r\n         } else { \r\n                set_airport_temperature_in_celsius(data.temperature.celsius); \r\n                set_airport_temperature_in_fahrenheit(data.temperature.fahrenheit); \r\n            }\r\n        if(data.wind === undefined) { setWindExists(false); } else {\r\n            setWindExists(true);\r\n            if(data.wind.degrees >= 100) { set_wind_direction(data.wind.degrees); } else {\r\n                padded_wind_direction = data.wind.degrees.toString();\r\n                set_wind_direction(padded_wind_direction.padStart(3, '0'));\r\n            }\r\n            set_wind_speed(data.wind.speed_kts);\r\n        }\r\n        setClouds(data.clouds[0].text);\r\n        setTimeout(\r\n            function() {\r\n                setLoadingStatus(false);\r\n            }, 1250)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    // empty dependency array means this effect will only run once (like componentDidMount in classes)\r\n    }, []);\r\n    return (\r\n        <>\r\n          <main>\r\n              {isLoading ? (\r\n                    <div className=\"lds-ring\">\r\n                    <div></div><div></div><div></div><div></div>\r\n                    </div>\r\n              ) : (\r\n                <div>\r\n                    {!isSignedIn ? (\r\n                        <Navigate to=\"/login\" />\r\n                    ) : (\r\n                        <div>\r\n                            {lodash.isEmpty(icao_code) ? (\r\n                                <h1>That airport does not exist!</h1>\r\n                            ) : (\r\n                                <div>\r\n                                    {!windExists ? (\r\n                                        <div>\r\n                                            <div>\r\n                                                <Link to={`/${icao_code}`}>{icao_code} </Link> <br></br>\r\n                                                <Link to={`/metar/${icao_code}`} onClick={(()=>\r\n                                                window.location.reload())}>Metar\r\n                                                </Link>\r\n                                            </div>\r\n                                            <h1>{icao_code}</h1>\r\n                                            <div>\r\n                                                <h2>{airportName}</h2>\r\n                                                <h3>{airportLocation}</h3>\r\n                                            </div>\r\n                                            <div>\r\n                                                <div className=\"metarTitle\">\r\n                                                    <h3>METAR - Current</h3>\r\n                                                </div>\r\n                                                <div className=\"metarTable\">\r\n                                                    <table className=\"table\">\r\n                                                        <tbody>\r\n                                                            <tr>\r\n                                                                <th colSpan={2}>\r\n                                                                    <p>{airport_raw_text}</p>\r\n                                                                </th>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>Flight Category</th>\r\n                                                                <td>\r\n                                                                    <span className=\"badge text-white\">\r\n                                                                        {flight_category}\r\n                                                                    </span>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>Temperature</th>\r\n                                                                <td>\r\n                                                                    {airport_temperature_in_celsius}° C /\r\n                                                                    {airport_temperature_in_fahrenheit}° F\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>Clouds</th>\r\n                                                                <td>\r\n                                                                    {clouds}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>Alitmeter</th>\r\n                                                                <td>{}</td>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div>\r\n                                            <div>\r\n                                                <Link to={`/${icao_code}`}>{icao_code} </Link> <br></br>\r\n                                                <Link to={`/metar/${icao_code}`} onClick={(()=>\r\n                                                window.location.reload())}>Metar\r\n                                                </Link>\r\n                                            </div>\r\n                                            <h1>{icao_code}</h1>\r\n                                            <div>\r\n                                                <h2>{airportName}</h2>\r\n                                                <h3>{airportLocation}</h3>\r\n                                            </div>\r\n                                            <div>\r\n                                                <div className=\"metarTitle\">\r\n                                                    <h3>METAR - Current</h3>\r\n                                                </div>\r\n                                                <div className=\"metarTable\">\r\n                                                    <table className=\"table\">\r\n                                                        <tbody>\r\n                                                            <tr>\r\n                                                                <th colSpan={2}>\r\n                                                                    <p>{airport_raw_text}</p>\r\n                                                                </th>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>Flight Category</th>\r\n                                                                <td>\r\n                                                                    <span className=\"badge text-white\">\r\n                                                                        {flight_category}\r\n                                                                    </span>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>Wind</th>\r\n                                                                <td>\r\n                                                                    {wind_direction}° at {wind_speed} KTS\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>Temperature</th>\r\n                                                                <td>\r\n                                                                    {airport_temperature_in_celsius}° C /\r\n                                                                    {airport_temperature_in_fahrenheit}° F\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>Clouds</th>\r\n                                                                <td>\r\n                                                                    {clouds}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>Alitmeter</th>\r\n                                                                <td>{}</td>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n            </div>\r\n          )}\r\n          </main>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Metar;\r\n","C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\components\\Login\\Login.tsx",["69","70","71"],[],"C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\firebase.js",[],[],{"ruleId":"72","severity":1,"message":"73","line":6,"column":24,"nodeType":"74","messageId":"75","endLine":6,"endColumn":30},{"ruleId":"72","severity":1,"message":"76","line":6,"column":32,"nodeType":"74","messageId":"75","endLine":6,"endColumn":37},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":5,"column":10,"nodeType":"74","messageId":"75","endLine":5,"endColumn":24},{"ruleId":"81","severity":1,"message":"83","line":6,"column":10,"nodeType":"74","messageId":"75","endLine":6,"endColumn":19},{"ruleId":"81","severity":1,"message":"84","line":6,"column":21,"nodeType":"74","messageId":"75","endLine":6,"endColumn":29},{"ruleId":"81","severity":1,"message":"85","line":8,"column":8,"nodeType":"74","messageId":"75","endLine":8,"endColumn":11},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"86","line":5,"column":21,"nodeType":"74","messageId":"75","endLine":5,"endColumn":25},{"ruleId":"81","severity":1,"message":"87","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":18},{"ruleId":"81","severity":1,"message":"88","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":14},{"ruleId":"81","severity":1,"message":"89","line":22,"column":10,"nodeType":"74","messageId":"75","endLine":22,"endColumn":19},{"ruleId":"81","severity":1,"message":"90","line":22,"column":21,"nodeType":"74","messageId":"75","endLine":22,"endColumn":33},{"ruleId":"91","severity":1,"message":"92","line":61,"column":8,"nodeType":"93","endLine":61,"endColumn":10,"suggestions":"94"},{"ruleId":"81","severity":1,"message":"95","line":2,"column":47,"nodeType":"74","messageId":"75","endLine":2,"endColumn":54},{"ruleId":"81","severity":1,"message":"96","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":13},{"ruleId":"81","severity":1,"message":"97","line":9,"column":11,"nodeType":"74","messageId":"75","endLine":9,"endColumn":29},"no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","no-native-reassign",["98"],"no-negated-in-lhs",["99"],"@typescript-eslint/no-unused-vars","'useGoogleLogin' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'env' is defined but never used.","'Link' is defined but never used.","'Navigate' is defined but never used.","'lodash' is defined but never used.","'altimeter' is assigned a value but never used.","'setAltimeter' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["100"],"'getAuth' is defined but never used.","'axios' is defined but never used.","'googleAuthenticate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},"Update the dependencies array to be: [fetchData]",{"range":"103","text":"104"},[2785,2787],"[fetchData]"]