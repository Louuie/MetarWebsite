[{"C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\index.js":"1","C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\App.tsx":"2","C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\components\\Home\\Home.tsx":"4","C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\components\\Airport\\Airport.tsx":"5","C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\components\\User\\User.tsx":"6","C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\components\\Airport\\Metar.tsx":"7","C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\components\\Login\\Login.tsx":"8","C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\firebase.js":"9","C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\spinner.tsx":"10"},{"size":624,"mtime":1645677831501,"results":"11","hashOfConfig":"12"},{"size":2069,"mtime":1646264298334,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1645677831501,"results":"14","hashOfConfig":"12"},{"size":1487,"mtime":1645900826340,"results":"15","hashOfConfig":"12"},{"size":2944,"mtime":1645900826969,"results":"16","hashOfConfig":"12"},{"size":1817,"mtime":1646264397076,"results":"17","hashOfConfig":"12"},{"size":12034,"mtime":1645902366545,"results":"18","hashOfConfig":"12"},{"size":882,"mtime":1646207060941,"results":"19","hashOfConfig":"12"},{"size":615,"mtime":1646205823496,"results":"20","hashOfConfig":"12"},{"size":223,"mtime":1646264292645,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},"lmb5ah",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\index.js",["57","58"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.tsx';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter, Routes, Route} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["59","60"],"C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\App.tsx",["61","62","63","64","65","66"],[],"C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\components\\Home\\Home.tsx",[],[],["67","68"],"C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\components\\Airport\\Airport.tsx",["69"],[],"import React, {useEffect, useState} from \"react\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport axios from 'axios';\r\nimport lodash from 'lodash';\r\nimport { useParams, Link, Navigate } from 'react-router-dom';\r\n\r\nfunction Airport(props) {\r\n    let params = useParams();\r\n    let isSignedIn = props.isSignedIn;\r\n    let [isLoading, setLoadingStatus] = useState(true);\r\n    let [icao_code, set_icao_code] = useState(params.airport);\r\n    let [airportName, setAirportName] = useState(null);\r\n    let [airportLocation, setAirportLocation] = useState(null);\r\n    let [airportLongitude, setAirportLongitude] = useState(null);\r\n    let [airportLatitude, setAirportLatitude] = useState(null);\r\n    const lat = airportLatitude;\r\n    const long = airportLongitude;\r\n    const map = {\r\n        center: {\r\n          lat: lat,\r\n          lng: long\r\n        },\r\n        zoom: 14\r\n      };\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:4000/metar?icao=${icao_code}`)\r\n        .then((res) => {\r\n            set_icao_code(res.data.icao);\r\n            setAirportName(res.data.station.name);\r\n            setAirportLocation(res.data.station.location);\r\n            setAirportLongitude(res.data.station.geometry.coordinates[0]);\r\n            setAirportLatitude(res.data.station.geometry.coordinates[1]);\r\n            setTimeout(function() {\r\n                setLoadingStatus(false);\r\n            }, 750)\r\n        }).catch((err) => { console.log(err); });\r\n    });\r\n\r\n    return (\r\n        <main>\r\n            {isLoading ? (\r\n                    <div className=\"lds-ring\">\r\n                    <div></div><div></div><div></div><div></div>\r\n                    </div>\r\n            ) : (\r\n            <div>\r\n                {isSignedIn ? (\r\n                    <div>\r\n                        {!lodash.isEmpty(icao_code) ? (\r\n                            <div>\r\n                                <div>\r\n                                    <h1>{icao_code}</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h2>{airportName}</h2>\r\n                                    <h2>{airportLocation}</h2>\r\n                                </div>\r\n                                <div style={{ height: '50vh', width: '50%' }}>\r\n                                    <GoogleMapReact bootstrapURLKeys={{key: \"AIzaSyDt9vPcQ0Lz7XfQKUr6UgtgXMD83-tjw0Y\"}}\r\n                                        center={map.center} zoom={map.zoom}>\r\n                                    </GoogleMapReact>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <h1>That airport does not exist!</h1>\r\n                        )}\r\n                    </div>\r\n                ) : (\r\n                    <Navigate to=\"/login\" />\r\n                )}\r\n            </div>\r\n            )}\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Airport;","C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\components\\User\\User.tsx",["70","71","72","73","74","75"],[],"C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\components\\Airport\\Metar.tsx",["76","77","78"],[],"import React, {useEffect, useState} from \"react\";\r\nimport axios from 'axios';\r\nimport lodash from 'lodash';\r\nimport { useParams, Link, Navigate } from 'react-router-dom';\r\nimport './Metar.css';\r\n\r\nfunction Metar(props) {\r\n    let params = useParams();\r\n    let padded_wind_direction\r\n    let [isLoading, setLoadingStatus] = useState(true);\r\n    let [icao_code, set_icao_code] = useState(params.airport); \r\n    let [airportName, setAirportName] = useState(null);\r\n    let [airportLocation, setAirportLocation] = useState(null);\r\n    let [airport_raw_text, set_airport_raw_text] = useState(null);\r\n    let [airport_temperature_in_celsius, set_airport_temperature_in_celsius] = useState(null);\r\n    let [airport_temperature_in_fahrenheit, set_airport_temperature_in_fahrenheit] = useState(null);\r\n    let [flight_category, set_flight_category] = useState(null);\r\n    let [wind_direction, set_wind_direction] = useState(null);\r\n    let [wind_speed, set_wind_speed] = useState(null);\r\n    let [windExists, setWindExists] = useState(null);\r\n    let [clouds, setClouds] = useState(null);\r\n    let [altimeter, setAltimeter] = useState(null);\r\n\r\n    let isSignedIn = props.isSignedIn; \r\n\r\n\r\n    const fetchData = async () => {\r\n        const res = await axios.get(`http://localhost:4000/metar?icao=${icao_code}`);\r\n        const data = await res.data;\r\n        set_icao_code(data.icao);\r\n        setAirportName(data.station.name);\r\n        setAirportLocation(data.station.location);\r\n        set_airport_raw_text(data.raw_text);\r\n        set_flight_category(data.flight_category);\r\n        if(data.temperature.celsius === undefined && data.temperature.fahrenheit === undefined) { \r\n            set_airport_temperature_in_celsius(data.temperature.minimum.celsius);\r\n            set_airport_temperature_in_fahrenheit(data.temperature.minimum.fahrenheit);\r\n         } else { \r\n                set_airport_temperature_in_celsius(data.temperature.celsius); \r\n                set_airport_temperature_in_fahrenheit(data.temperature.fahrenheit); \r\n            }\r\n        if(data.wind === undefined) { setWindExists(false); } else {\r\n            setWindExists(true);\r\n            if(data.wind.degrees >= 100) { set_wind_direction(data.wind.degrees); } else {\r\n                padded_wind_direction = data.wind.degrees.toString();\r\n                set_wind_direction(padded_wind_direction.padStart(3, '0'));\r\n            }\r\n            set_wind_speed(data.wind.speed_kts);\r\n        }\r\n        setClouds(data.clouds[0].text);\r\n        setTimeout(\r\n            function() {\r\n                setLoadingStatus(false);\r\n            }, 1250)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    // empty dependency array means this effect will only run once (like componentDidMount in classes)\r\n    }, []);\r\n    return (\r\n        <>\r\n          <main>\r\n              {isLoading ? (\r\n                    <div className=\"lds-ring\">\r\n                    <div></div><div></div><div></div><div></div>\r\n                    </div>\r\n              ) : (\r\n                <div>\r\n                    {!isSignedIn ? (\r\n                        <Navigate to=\"/login\" />\r\n                    ) : (\r\n                        <div>\r\n                            {lodash.isEmpty(icao_code) ? (\r\n                                <h1>That airport does not exist!</h1>\r\n                            ) : (\r\n                                <div>\r\n                                    {!windExists ? (\r\n                                        <div>\r\n                                            <div>\r\n                                                <Link to={`/${icao_code}`}>{icao_code} </Link> <br></br>\r\n                                                <Link to={`/metar/${icao_code}`} onClick={(()=>\r\n                                                window.location.reload())}>Metar\r\n                                                </Link>\r\n                                            </div>\r\n                                            <h1>{icao_code}</h1>\r\n                                            <div>\r\n                                                <h2>{airportName}</h2>\r\n                                                <h3>{airportLocation}</h3>\r\n                                            </div>\r\n                                            <div>\r\n                                                <div className=\"metarTitle\">\r\n                                                    <h3>METAR - Current</h3>\r\n                                                </div>\r\n                                                <div className=\"metarTable\">\r\n                                                    <table className=\"table\">\r\n                                                        <tbody>\r\n                                                            <tr>\r\n                                                                <th colSpan={2}>\r\n                                                                    <p>{airport_raw_text}</p>\r\n                                                                </th>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>Flight Category</th>\r\n                                                                <td>\r\n                                                                    <span className=\"badge text-white\">\r\n                                                                        {flight_category}\r\n                                                                    </span>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>Temperature</th>\r\n                                                                <td>\r\n                                                                    {airport_temperature_in_celsius}° C /\r\n                                                                    {airport_temperature_in_fahrenheit}° F\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>Clouds</th>\r\n                                                                <td>\r\n                                                                    {clouds}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>Alitmeter</th>\r\n                                                                <td>{}</td>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div>\r\n                                            <div>\r\n                                                <Link to={`/${icao_code}`}>{icao_code} </Link> <br></br>\r\n                                                <Link to={`/metar/${icao_code}`} onClick={(()=>\r\n                                                window.location.reload())}>Metar\r\n                                                </Link>\r\n                                            </div>\r\n                                            <h1>{icao_code}</h1>\r\n                                            <div>\r\n                                                <h2>{airportName}</h2>\r\n                                                <h3>{airportLocation}</h3>\r\n                                            </div>\r\n                                            <div>\r\n                                                <div className=\"metarTitle\">\r\n                                                    <h3>METAR - Current</h3>\r\n                                                </div>\r\n                                                <div className=\"metarTable\">\r\n                                                    <table className=\"table\">\r\n                                                        <tbody>\r\n                                                            <tr>\r\n                                                                <th colSpan={2}>\r\n                                                                    <p>{airport_raw_text}</p>\r\n                                                                </th>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>Flight Category</th>\r\n                                                                <td>\r\n                                                                    <span className=\"badge text-white\">\r\n                                                                        {flight_category}\r\n                                                                    </span>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>Wind</th>\r\n                                                                <td>\r\n                                                                    {wind_direction}° at {wind_speed} KTS\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>Temperature</th>\r\n                                                                <td>\r\n                                                                    {airport_temperature_in_celsius}° C /\r\n                                                                    {airport_temperature_in_fahrenheit}° F\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>Clouds</th>\r\n                                                                <td>\r\n                                                                    {clouds}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>Alitmeter</th>\r\n                                                                <td>{}</td>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n            </div>\r\n          )}\r\n          </main>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Metar;\r\n","C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\components\\Login\\Login.tsx",["79","80","81","82"],[],"C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\firebase.js",[],[],"C:\\Users\\Elias\\Documents\\Programming\\MetarWebsite\\frontend\\src\\spinner.tsx",[],[],{"ruleId":"83","severity":1,"message":"84","line":6,"column":24,"nodeType":"85","messageId":"86","endLine":6,"endColumn":30},{"ruleId":"83","severity":1,"message":"87","line":6,"column":32,"nodeType":"85","messageId":"86","endLine":6,"endColumn":37},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":7,"column":24,"nodeType":"85","messageId":"86","endLine":7,"endColumn":28},{"ruleId":"94","severity":1,"message":"95","line":29,"column":32,"nodeType":"96","endLine":29,"endColumn":36},{"ruleId":"97","severity":1,"message":"98","line":39,"column":32,"nodeType":"99","messageId":"100","endLine":39,"endColumn":34},{"ruleId":"101","severity":1,"message":"102","line":39,"column":45,"nodeType":"103","messageId":"104","endLine":39,"endColumn":47},{"ruleId":"101","severity":1,"message":"102","line":39,"column":76,"nodeType":"103","messageId":"104","endLine":39,"endColumn":78},{"ruleId":"97","severity":1,"message":"98","line":39,"column":109,"nodeType":"99","messageId":"100","endLine":39,"endColumn":111},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":5,"column":21,"nodeType":"85","messageId":"86","endLine":5,"endColumn":25},{"ruleId":"92","severity":1,"message":"105","line":3,"column":30,"nodeType":"85","messageId":"86","endLine":3,"endColumn":48},{"ruleId":"92","severity":1,"message":"106","line":5,"column":10,"nodeType":"85","messageId":"86","endLine":5,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":5,"column":20,"nodeType":"85","messageId":"86","endLine":5,"endColumn":24},{"ruleId":"92","severity":1,"message":"107","line":9,"column":10,"nodeType":"85","messageId":"86","endLine":9,"endColumn":19},{"ruleId":"92","severity":1,"message":"108","line":10,"column":10,"nodeType":"85","messageId":"86","endLine":10,"endColumn":20},{"ruleId":"97","severity":1,"message":"98","line":28,"column":37,"nodeType":"99","messageId":"100","endLine":28,"endColumn":39},{"ruleId":"92","severity":1,"message":"109","line":22,"column":10,"nodeType":"85","messageId":"86","endLine":22,"endColumn":19},{"ruleId":"92","severity":1,"message":"110","line":22,"column":21,"nodeType":"85","messageId":"86","endLine":22,"endColumn":33},{"ruleId":"94","severity":1,"message":"111","line":61,"column":8,"nodeType":"112","endLine":61,"endColumn":10,"suggestions":"113"},{"ruleId":"92","severity":1,"message":"114","line":3,"column":47,"nodeType":"85","messageId":"86","endLine":3,"endColumn":54},{"ruleId":"92","severity":1,"message":"115","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":13},{"ruleId":"92","severity":1,"message":"116","line":9,"column":11,"nodeType":"85","messageId":"86","endLine":9,"endColumn":29},{"ruleId":"92","severity":1,"message":"117","line":15,"column":19,"nodeType":"85","messageId":"86","endLine":15,"endColumn":29},"no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","no-native-reassign",["118"],"no-negated-in-lhs",["119"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'unmounted' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'GoogleAuthProvider' is defined but never used.","'Navigate' is defined but never used.","'isLoading' is assigned a value but never used.","'isSignedIn' is assigned a value but never used.","'altimeter' is assigned a value but never used.","'setAltimeter' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["120"],"'getAuth' is defined but never used.","'axios' is defined but never used.","'googleAuthenticate' is assigned a value but never used.","'credential' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},"Update the dependencies array to be: [fetchData]",{"range":"123","text":"124"},[2785,2787],"[fetchData]"]